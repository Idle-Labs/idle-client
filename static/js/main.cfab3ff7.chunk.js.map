{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","NetworkIndicator/NetworkIndicator.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","CustomList/CustomList.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","RoundButton/RoundButton.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","Title/Title.js","ImageButton/ImageButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","availableNetworks","getGlobalConfig","networkId","networkConfig","value","config","label","requiredNetwork","getRequiredNetwork","find","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","innerProps","px","py","customOptionProps","pr","options","CustomOptionValue","imageSrc","data","provider","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","mr","src","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","cursor","backgroundColor","isCorrectNetwork","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","isInteractive","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","margin","my","align","image","imageProps","useIconOnly","icon","iconColor","iconProps","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","v","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","flexBasis","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","CustomInputContainer","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","baseToken","symbol","blockExplorerUrls","method","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_ref22","_callee15","stakingRewards","tokensDistribution","_context15","_ref23","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref24","_ref25","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref26","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref27","_ref28","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref29","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref30","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref31","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref32","_callee20","_context20","_x20","_x21","_x22","_ref33","_callee21","_ref34","_ref35","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getBaseToken","getCurrentNetwork","getCurrentNetworkId","current","getPolygonBridgeTxs","_callee28","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref38","_ref39","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args28","_context28","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref40","_callee23","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context23","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x25","_ref41","_callee24","_context24","_x26","match","_ref42","_callee25","_context25","_x27","_ref43","_callee26","_context26","_x28","items","to_address","_ref44","_callee27","polygonTx","_context27","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x29","sort","getPolygonBaseTxs","_callee29","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args29","_context29","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","getEtherscanBaseTxs","_callee30","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args30","_context30","filterEthereumTxs","_callee31","_args31","_context31","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee32","resultData","_resultData","allAvailableTokens","_args32","_context32","processStoredTxs","t1","_callee33","contractInstance","_context33","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref50","_callee34","_ref51","_ref52","_context34","getTransactionReceipt","_x30","_ref53","_callee35","_args35","_context35","_x31","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref54","_callee36","processTransactions","idleTokensAddresses","_args36","_context36","mappedTx","_x32","_x33","filterEtherscanTxs","_ref55","_callee37","processTxs","_args37","_context37","_x34","_ref56","_callee38","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args38","_context38","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x35","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref57","_callee43","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args43","_context43","baseTokenConfig","baseTokenAddress","_ref58","_callee42","minedTxs","_context42","_ref59","_callee41","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context41","getCurveTokenPrice","_ref60","_callee39","_context39","_x40","_x41","baseTokensConfig","t2","_ref61","_callee40","_context40","_x42","_x43","_x38","_x39","_x37","_x36","_ref62","_callee49","txsToProcess","_args49","_context49","_ref63","_callee48","_context48","_ref64","_callee47","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context47","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref65","_callee44","_context44","_x48","_x49","_ref66","_callee45","_context45","_x50","_x51","oldContract","events","raw","_ref67","_callee46","_context46","_x52","_x53","abi","decodeLog","_token","_x46","_x47","_x45","_x44","alias","getCustomAddress","setCustomAddress","customAddress","_ref68","_callee50","error_callback","_args50","_context50","catch","_x54","_ref69","_callee51","apiKeyIndex","apiKey","_args51","_context51","message","_x55","_ref70","_callee52","return_data","_args52","_context52","_x56","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee53","page","googlePageviewInfo","isOrigin","_args53","_context53","ga","_ref72","_callee55","googleEventsInfo","debugEnabled","originOk","_args55","_context55","analytics","google","addPostfixForTestnet","_ref73","_callee54","_context54","hitCallback","hitCallbackFail","_x58","_x59","_x57","createContract","_ref74","_callee56","_context56","_x60","_x61","_x62","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee59","activeOnly","whitelist","proposals","currTime","validProposals","_args59","_context59","addr","msg","payload","end","_ref76","_callee58","checkedStrategies","_context58","snapshot","metadata","strategies","_ref77","_callee57","_context57","_x64","_x63","_ref78","_callee60","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","statsConfig","filteredCachedData","_filteredData","apiInfo","filteredData","_args60","_context60","_x65","getTokenExchangeRate","_ref79","_callee61","exchangeRateParams","exchangeRate","_context61","_x66","_x67","getTokenDecimals","_ref80","_callee62","_context62","_x68","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee63","idleTokenConfig","feeDistributorConfig","_context63","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee64","contractPaused","_args64","_context64","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref83","_callee66","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context66","lastAllocationsPromise","_ref84","_callee65","lastAllocations","_context65","_x70","_x71","alloc","_x69","_ref85","_callee67","oldContractBalance","oldContractTokenDecimals","oldContractName","_context67","getContractBalance","_x72","_x73","_ref86","_callee68","eventName","_args68","_context68","getContractPastEvents","_x74","_x75","estimateMethodGasUsage","_ref87","_callee69","methodParams","_contract$methods","functionCall","gasLimit","_ref88","_ref89","_args69","_context69","getGasPrice","estimateGas","_x76","_x77","_ref90","_callee70","userAddress","signedParameters","callback_receipt","_contract$methods2","_context70","on","once","confirmationNumber","receipt","_x78","_x79","_x80","_x81","_x82","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref91","_callee71","biconomyInfo","res","_context71","limits","apiId","headers","x-api-key","_x83","sendTxWithPermit","_ref92","_callee72","_contract$methods3","messageToSign","_this$getSignaturePar","_context72","encodeABI","personal","sign","_x84","_x85","_x86","_x87","_x88","_x89","buildBiconomyErc20ForwarderTx","_ref93","_callee73","permitType","callData","buildParams","_context73","txGas","erc20ForwarderClient","buildTx","_x90","_x91","_x92","_x93","_x94","_ref94","_callee75","_context75","_ref95","_callee74","_context74","_x96","_x97","_x95","sendBiconomyTxWithErc20Forwarder","_ref96","_callee76","req","metaInfo","txResponse","fetchReceiptIntervalId","_context76","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x98","_x99","_x100","_x101","sendBiconomyTxWithPersonalSign","_ref97","_callee77","_this$getSignaturePar2","_context77","getNonce","_x102","_x103","_x104","_x105","signPermitEIP2612","_ref98","_callee78","erc20Name","owner","spender","deadline","domain","permit","domainData","_context78","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x106","_x107","_x108","_x109","_x110","_x111","_x112","_x113","signPermit","_ref99","_callee79","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args79","_context79","net","getId","round","nonceMethod","pow","allowed","response","_x114","_x115","_x116","_ref100","_callee80","permitParams","methodAbi","useNonce","_args80","_context80","_jsonInterface","f","unshift","_x117","_x118","_x119","_x120","_x121","_x122","_x123","sendSignedTx","_ref101","_callee81","MetaTransaction","dataToSign","_context81","_x124","_x125","_x126","_x127","_x128","checkTokenApproved","_ref102","_callee82","contractAddr","walletAddr","_ref103","_ref104","allowance","_context82","getAllowance","gte","_x129","_x130","_x131","_ref105","_callee83","_context83","_x132","_x133","_x134","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref106","_callee84","stakedBalance","_args84","_context84","_x135","_x136","getTrancheStakingRewards","_ref107","_callee86","_context86","_ref108","_callee85","tokenGlobalConfig","_context85","_x139","_x137","_x138","_ref109","_callee87","field","addGovTokens","_args87","_context87","loadTrancheField","_x140","_x141","_x142","_x143","_x144","_x145","_x146","_x147","_ref110","_callee88","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref111","_ref112","totalSupply","virtualPrice","_ref113","_ref114","staked1","lastPrice1","_ref115","_ref116","deposited1","lastPrice","_ref117","_ref118","redeemable1","staked2","_ref119","_ref120","earningsStart","trancheApy2","deposited3","earningsEnd","_ref121","_ref122","trancheFee","earningsCounter","feesStart","feesEnd","_ref123","_ref124","deposited4","redeemable3","_ref125","_ref126","deposited2","redeemable2","_ref127","_ref128","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref129","_ref130","rewardsTokens","incentiveTokens","govTokens","_args88","_context88","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x148","_x149","_x150","_x151","_x152","_x153","_x154","loadAssetField","_ref131","_callee89","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref132","_ref133","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref134","_ref135","amountLentCurve1","redeemableBalanceCurve","_ref136","_ref137","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref138","_ref139","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref140","_ref141","tokenPriceFirstDeposit","_ref142","_ref143","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref144","_ref145","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref146","_ref147","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref148","_ref149","amountLentCurve2","redeemableBalanceCurve1","_ref150","_ref151","redeemableBalance2","_args89","_context89","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x155","_x156","_x157","_x158","getIdleTokenSupply","_ref152","_callee90","idleTokenSupply","_args90","_context90","_x159","getIdleTokenPriceWithFee","_ref153","_callee91","_ref154","_ref155","fee","priceWFee","_args91","_context91","eq","_x160","_x161","_ref156","_callee92","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args92","_context92","_x162","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref157","_callee93","_ref158","_ref159","idleTokensTotalSupply","userShare","_context93","_x163","_x164","open","_callee95","coverProtocolConfig","nexusMutualConfig","_args95","_context95","_ref161","_callee94","coverage","coverageTokens","protocolImage","_context94","tokens","expirationTimestamp","utc","_x165","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref162","_callee97","incidentsInfo","_ref163","_ref164","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context97","directProps","startBlock","contractInfo","buyer","_ref165","_callee96","cover","coverId","claimSubmittedEvent","_ref166","_ref167","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref168","_ref169","_context96","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x167","_x166","getBatchedDepositExecutions","_ref170","_callee98","_context98","_x168","getBatchedDeposits","_callee100","filter_by_status","batchDepositConfig","batchedDeposits","_args100","_context100","_ref172","_callee99","currBatchIndex","batchIndex","_ref173","_ref174","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context99","_x169","getETHBalance","_ref175","_callee101","fixDecimals","_args101","_context101","_x170","_ref176","_callee102","_ref177","_ref178","_args102","_context102","_x171","_x172","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref179","_callee103","_args103","_context103","_x173","_ref180","_callee104","_args104","_context104","_x174","_ref181","_callee105","_args105","_context105","_x175","_x176","getProtocolBalance","_ref182","_callee106","_context106","_x177","_x178","getAprs","_ref183","_callee107","_context107","addresses","_x179","genericIdleCall","_ref184","_callee108","callParams","_args108","_context108","_x180","_ref185","_callee109","_contract$methods4","_args109","_context109","_x181","_x182","_ref186","_callee111","_args111","_context111","_ref187","_callee110","_context110","_x184","_x185","_x183","getTxDecodedLogs","_ref188","_callee113","logAddr","decodeLogs","internalTransfers","_context113","_ref189","_callee112","_context112","_x190","_x191","_x186","_x187","_x188","_x189","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee114","_context114","_ref191","_callee115","_context115","getBlock","_x192","_ref192","_callee116","_args116","_context116","getPastEvents","_x193","_x194","_ref193","_callee117","_args117","_context117","_x195","_x196","cachedContractCall","_ref194","_callee118","_args118","_context118","_x197","_x198","_ref195","_callee119","_contract$methods5","_args119","_context119","_x199","_x200","_ref196","_callee120","async","_args120","_context120","_x201","_x202","getUnlentBalance","_ref197","_callee121","unlentBalance","_context121","_x203","_ref198","_callee122","_args122","_context122","_x204","getLastAllocations","_ref199","_callee124","tokenAllocations","_context124","_ref200","_callee123","_context123","_x206","_x207","_x205","_ref201","_callee125","protocolsAprs","_ref202","_ref203","govTokensBalances","_args125","_context125","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x208","getSushiswapPoolTokenPrice","_ref204","_callee126","_ref205","_ref206","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref207","_ref208","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context126","getSushiswapConversionRate","_x209","_ref209","_callee127","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context127","_x210","_x211","_ref210","_callee128","unires","_context128","addressForPrice","_x212","_x213","getCurveDepositedTokens","_ref211","_callee129","idleTokensBalances","remainingCurveTokens","_args129","_context129","_x214","getCurveUnevenTokenAmounts","_ref212","_callee130","amounts","max_burn_amount","unevenAmounts","_context130","getCurveDepositContract","_x215","_x216","_callee131","curveRatesInfo","_context131","strategyTokens","getCurveAPYContract","_callee132","blocksForPrevTokenPrice","_ref215","_ref216","prevTokenPrice","blocksMultiplier","curveAPR","_context132","getCurveTokenSupply","_callee133","_context133","getCurvePoolContract","_callee134","_args134","_context134","_callee135","_args135","_context135","_ref220","_callee136","_ref221","_ref222","_context136","_x217","_callee137","depositContractInfo","_context137","getCurveZapContract","_callee138","zapContractInfo","_context138","_callee139","poolContractInfo","_context139","getCurveSwapContract","_callee140","migrationContractInfo","_context140","getCurveIdleTokensAmounts","_callee142","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args142","_context142","_ref228","_callee141","coinIndex","curveIdleTokens","_context141","migrationParams","_x218","getCurveTokensAmounts","_callee144","useCoinIndex","_args144","_context144","_ref230","_callee143","_ref231","_ref232","idleTokenPrice","totalTokenSupply","_context143","_x219","getCurveAmounts","_ref233","_callee146","_args146","_context146","_ref234","_callee145","_context145","_x222","_x220","_x221","getCurveTokenAmount","_ref235","_callee147","_args147","_context147","_x223","getCurveSlippage","_ref236","_callee148","uneven_amounts","depositContract","_ref237","_ref238","Sv","_args148","_context148","_x224","_x225","_ref239","_callee149","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref240","_ref241","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args149","_context149","IAaveIncentivesController","emissionPerSecond","_x226","_callee151","_args151","_context151","_ref243","_callee150","_ref244","_ref245","_context150","_x227","getWMaticApr","_ref246","_callee152","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args152","_context152","_x228","_x229","getStkAaveApr","_ref247","_callee153","aaveConversionRate","stkAaveAPR","stkAaveValue","_args153","_context153","_x230","_x231","getCompAPR","_ref248","_callee154","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args154","_context154","_x232","_x233","getCompSpeed","_ref249","_callee155","cTokenAddress","compSpeed","_context155","_x234","_ref250","_callee156","cTokenInfo","compoundAllocationPerc","_ref251","_ref252","cTokenTotalSupply","compoundPoolShare","_args156","_context156","_x235","_callee158","_args158","_context158","_ref254","_callee157","_ref255","_ref256","_context157","_x236","_callee160","_args160","_context160","_ref258","_callee159","_ref259","_ref260","compApr","_context159","_x237","getTokensCsv","_callee163","csv","_context163","prototype","sum","pv","cv","avg","_ref262","_callee162","_context162","_ref263","_callee161","rates","header","aprAvg","scoreAvg","lastRow","_context161","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x239","_x238","_callee165","govToken","convertToken","_args165","_context165","_ref265","_callee164","compTokenBalance","_context164","_x240","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref266","_callee167","govTokensUserDistribution","_args167","_context167","_ref267","_callee166","_context166","_x242","_x241","getGovTokensDistributionSpeed","_ref268","_callee169","govTokensDistribution","_args169","_context169","_ref269","_callee168","govSpeed","_context168","_x244","_x243","getGovTokensAprs","_ref270","_callee171","govTokensAprs","_args171","_context171","_ref271","_callee170","_ref272","_ref273","_ref274","_ref275","cTokenConfig","_context170","aprTooltipMode","_x247","_x245","_x246","_callee173","_args173","_context173","_ref277","_callee172","govTokenBalance","tokenConversionRate","fromTokenConfig","_context172","_x248","_callee174","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args174","_context174","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref279","_callee176","govTokensAmounts","_context176","getGovTokensUserAmounts","_ref280","_callee175","govTokenIndex","_context175","getGovTokenAddessByIndex","_x251","_x252","_x249","_x250","_ref281","_callee177","_context177","_x253","_x254","_ref282","_callee178","_context178","_x255","_x256","_callee181","govTokenConfigForced","_args181","_context181","_ref284","_callee180","_context180","_ref285","_callee179","_context179","_x258","_x259","_x257","getTokenFees","_callee182","_args182","_context182","_callee183","_ref288","_ref289","feePercentage","gain","fees","_args183","_context183","_ref290","_callee184","_args184","_context184","_x260","getTotalTVL","_callee185","tokensTVL","_context185","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee189","_context189","_ref293","_callee188","_context188","_ref294","_callee187","oldTokenTVL","idleTokenName","_ref295","_ref296","oldTokenConfig","_ref300","_ref301","oldTokenPrice","oldTotalSupply","_context187","showAUM","_ref297","_callee186","_ref298","_ref299","govTokenConversionRate","govTokenBalanceConverted","_context186","_x263","oldProtocols","oldProtocol","protocolPos","_x262","_x261","getSubstackLatestFeed","_callee190","endpointInfo","idleSubstackFeed","latestFeed","_context190","getAggregatedStats","_callee192","allNetworks","networkIds","totalAUM","_args192","_context192","_ref304","_callee191","tvls","_context191","getAggregatedStats_chain","_x264","_callee196","avgAPR","_args196","_context196","_ref306","_callee195","_context195","_ref307","_callee194","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context194","_ref308","_callee193","_ref309","_ref310","_context193","_x267","_x266","_x265","getTokenApy","_ref311","_callee197","_context197","_x268","getTokensToMigrate","_callee200","_args200","_context200","_ref313","_callee199","_context199","_ref314","_callee198","_ref315","_context198","_x270","_x269","getProtocolsTokensBalances","_callee202","tokenBalances","minTokenBalance","protocolsTokens","_args202","_context202","_ref317","_callee201","tokenContract","_context201","_x271","_ref318","_callee203","_args203","_context203","_x272","_x273","_x274","getAvgAPYStats","_ref319","_callee204","apiResults","_args204","_context204","_x275","_x276","_ref320","_callee205","count","_conversionRate","ToTokenConfig","_args205","_context205","_x277","_x278","getTokenScore","_ref321","_callee206","_ref322","_ref323","tokenScore","_context206","protocolScore","getTokenScoreApi","_x279","_x280","_ref324","_callee207","scores","_context207","_x281","_x282","_ref325","_callee208","idleGovTokenShowAPR","idleAPR","_args208","_context208","_x283","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","userHasFunds","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","paginationEnabled","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","env","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","useInfuraProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","comingSoon","titlePostfix","enabledEnvs","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","polygon","baseUrl","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","skipMintForDeposit","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","rowsPerPage","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","isSupportedNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args","reload","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","_args7","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref19","_ref20","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","_args25","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args27","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","contractInitialized","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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AK,8FACL3rG,MAAO,CACL0S,gBAAiB,CACfusH,aAAc,CACZt+H,SAAU,GACVghD,IAAKioF,GACL1nG,SAAU,OACV3D,UAAW,MACX52B,KAAM,iBACN0O,MAAO,iBACPrG,QAAS,6CACT2sB,kBAAmB,CACjBglB,IAAKkoF,GACLliI,KAAM,wBACNqI,QAAS,6CACTmhG,UAAW,CACT,CACE5oG,MAAO,UACPZ,KAAM,cAKdu3H,cAAe,CACbv+H,SAAU,GACVghD,IAAKioF,GACL1nG,SAAU,OACV3D,UAAW,OACX52B,KAAM,kBACN0O,MAAO,kBACPrG,QAAS,6CACT2sB,kBAAmB,CACjBglB,IAAKkoF,GACLliI,KAAM,yBACNqI,QAAS,6CACTmhG,UAAW,CACT,CACE5oG,MAAO,UACPZ,KAAM,cAKdw3H,cAAe,CACbx+H,SAAU,GACVghD,IAAKioF,GACL1nG,SAAU,OACV3D,UAAW,OACX52B,KAAM,kBACN0O,MAAO,kBACPrG,QAAS,6CACT2sB,kBAAmB,CACjBglB,IAAKkoF,GACLliI,KAAM,yBACNqI,QAAS,6CACTmhG,UAAW,CACT,CACE5oG,MAAO,UACPZ,KAAM,cAKdmiI,cAAe,CACbnpI,SAAU,GACVghD,IAAKioF,GACL1nG,SAAU,OACV3D,UAAW,OACX52B,KAAM,kBACN0O,MAAO,kBACPrG,QAAS,6CACT2sB,kBAAmB,CACjBglB,IAAKkoF,GACLliI,KAAM,yBACNqI,QAAS,6CACTmhG,UAAW,CACT,CACE5oG,MAAO,UACPZ,KAAM,cAKdoiI,cAAe,CACbppI,SAAU,GACVghD,IAAKioF,GACL1nG,SAAU,OACV3D,UAAW,OACX52B,KAAM,kBACN0O,MAAO,kBACPrG,QAAS,6CACT2sB,kBAAmB,CACjBglB,IAAKkoF,GACLliI,KAAM,yBACNqI,QAAS,6CACTmhG,UAAW,CACT,CACE5oG,MAAO,UACPZ,KAAM,cAKdqiI,cAAe,CACbrpI,SAAU,GACVghD,IAAKioF,GACL1nG,SAAU,OACV3D,UAAW,OACX52B,KAAM,kBACN0O,MAAO,kBACPrG,QAAS,6CACT2sB,kBAAmB,CACjBgl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","file":"static/js/main.cfab3ff7.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks:[],\n    defaultNetwork:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks(){\n\n    if (!this.props.networkInitialized){\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const activeNetworks = enabledNetworks.map( networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value:networkId,\n        config:networkConfig,\n        label:networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find( network => network.value === requiredNetwork.id );\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId){\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized){\n      this.setState({\n        defaultNetwork:null\n      },() => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          px={0}\n        >\n          <Flex\n            {...props.innerProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        name={'network'}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px:1,\n          py:0,\n          height:'42px'\n        },this.props.innerProps)}\n        customOptionProps={{\n          px:0,\n          pl:3,\n          pr:0\n        }}\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n      <DashboardCard\n        {...this.props}\n        cardProps={{\n          px:[2,3],\n          display:'flex',\n          width:[1,'auto'],\n          alignItems:'center',\n          justifyContent:'center',\n          height:(this.props.innerProps && this.props.innerProps.height) || '42px',\n        }}\n        isInteractive={false}\n      >\n        <Loader size={'20px'} />\n      </DashboardCard>\n    );\n  }\n}\n\nexport default NetworkIndicator;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // console.log('tokensData',tokensData);\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      tokensToMigrate:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig,this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token,account)\n      ]);\n\n      if (migrationEnabled){\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy:this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig,account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const currentNetworkId = this.getRequiredNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    // if (tokenSymbol === 'USDC'){\n    //   debugger;\n    // }\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const currentNetworkId = this.getRequiredNetworkId();\n    const statsConfig = this.getGlobalConfig(['stats']);\n    const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(currentNetworkId);\n    if (!statsEnabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find( tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase() ) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading || currentNetwork.id === 137){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) : !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        1:[\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"],\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        useInfuraProvider:false,\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        useInfuraProvider:false,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    firstBlockNumber: 8119247,\n    enabledNetworks: [1, 137],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://rpc-mainnet.matic.network'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:ERC20Predicate,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:EtherPredicate,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1874,\n\t\"./testnet/mumbai/index.json\": 1875\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1874,\n\t\"./networks.json\": 1873,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1875\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(() => {\n      // console.log(networkId,this.state.network);\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n\n    // if (!networkId){\n    //   return false;\n    // }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n    // console.log('initWeb3',this.state.network.current.id,networkId,provider,web3Rpc,web3InfuraRpc);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      // if (this.state.networkInitialized && connectorName !== 'Infura'){\n      //   this.props.setConnector('Infura',null);\n      // }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // console.log(`createContract: ${name} - addr: ${address}`);\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.required.id]);\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    if (contracts){\n      await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n        const contractInfo = contracts[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const useInfuraProvider = !!contractInfo.useInfuraProvider;\n          this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n          await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        // Initialize govToken contracts\n        let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n        if (!foundGovTokenContract) {\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[this.state.network.required.id] ? govTokenConfig.addresses[this.state.network.required.id] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          await this.initContract(token, contractAddress, govTokenConfig.abi);\n        }\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    if (this.props.availableTranches){\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n        const tokens = this.props.availableTranches[protocol];\n        await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n          const tokenConfig = tokens[token];\n          await Promise.all([\n            this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n            this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n            this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n            this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n            this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n            this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n          ]);\n        });\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\nimport NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            {\n              !this.props.isMobile &&\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                >\n                  {\n                    governanceEnabled && \n                      <Link\n                        mr={4}\n                        fontSize={3}\n                        color={'white'}\n                        hoverColor={'white'}\n                        fontFamily={'sansSerif'}\n                        textAlign={['center','left']}\n                        onClick={ (e) => window.location.hash='#/governance' }\n                      >\n                        Governance\n                      </Link>\n                  }\n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                  >\n                    Contact Us\n                  </Link>\n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                  >\n                    FAQs\n                  </Link>\n                </Flex>\n            }\n            <Flex\n              ml={4}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData).forEach(key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null) {\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData){\n      Object.keys(storedCachedData).forEach( key => {\n        const storedData = storedCachedData[key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now() / 1000);\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce((enabledTokens, token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled) {\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      }, {});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens_2',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    // console.log('requiredNetwork',requiredNetwork);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment() {\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    }, () => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setToken={e => { this.setToken(e) }}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}