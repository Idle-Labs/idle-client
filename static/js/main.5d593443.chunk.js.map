{"version":3,"sources":["AssetField/AssetField.js","SmartNumber/SmartNumber.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","ImageButton/ImageButton.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","FlexLoader/FlexLoader.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","SendTxWithBalance/SendTxWithBalance.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Migrate/Migrate.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","ETHWrapper/ETHWrapper.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","BNify","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","cardProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","text","mt","textProps","children","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","py","px","transition","cursor","overflow","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","loadData","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","RoundButton","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","input","bg","button","gradientButton","empty","select","selectDark","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","eventValue","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","approveEnabled","checkTokenApproved","infoBox","steps","step","stepIndex","link","description","balanceSelectorInfo","required","placeholder","approveDescription","ETHWrapper","balanceETH","balanceWETH","loadBalance","updateActionData","contract","getETHBalance","getTokenBalance","mintLog","txReceipt","logs","log","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","depositOnly","CardIconButton","iconColor","iconBgColor","setAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","connectAndValidateAccount","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this5","batchId","callbackClaim","_this6","callbackReceiptClaim","_this7","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","utc","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","disabledTokens","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","getAmountDeposited","userAvgPrice","amountDeposited","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","config","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee40","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context40","allocationPromise","_ref44","_callee38","_context38","lastAmounts","call","_x38","_x39","availableTokenPromise","_ref45","_callee39","_context39","_x40","_x41","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x37","_ref46","_callee41","oldContractBalance","oldContractTokenDecimals","oldContractName","_context41","getContractBalance","_x42","_x43","_ref47","_callee42","signedParameters","callback_receipt","_contract$methods","_context42","getGasPrice","once","confirmationNumber","receipt","_x44","_x45","_x46","_x47","_x48","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref48","_callee43","biconomyInfo","res","_context43","headers","x-api-key","_x49","sendTxWithPermit","_ref49","_callee44","_contract$methods2","messageToSign","_this$getSignaturePar","_context44","encodeABI","_address","personal","sign","_x50","_x51","_x52","_x53","_x54","_x55","sendBiconomyTxWithPersonalSign","_ref50","_callee45","_this$getSignaturePar2","_context45","getNonce","_x56","_x57","_x58","_x59","signPermitEIP2612","_ref51","_callee46","erc20Name","owner","spender","deadline","domain","domainData","_context46","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x60","_x61","_x62","_x63","_x64","_x65","_x66","_x67","signPermit","_ref52","_callee47","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args47","_context47","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x68","_x69","_x70","_x71","_x72","_x73","_x74","_x75","_x76","sendSignedTx","_ref53","_callee48","MetaTransaction","dataToSign","_context48","_x77","_x78","_x79","_x80","_x81","_ref54","_callee49","contractAddr","walletAddr","allowance","_context49","getAllowance","_x82","_x83","_x84","_ref55","_callee50","_context50","_x85","_x86","_x87","txData","disableERC20","toTwosComplement","_ref56","_callee51","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref57","_ref58","curveAvgBuyPrice","curveTokenBalance","_ref59","_ref60","amountLentCurve1","redeemableBalanceCurve","_ref61","_ref62","earningPerYear","_ref63","_ref64","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref65","_ref66","tokenPriceFirstDeposit","_ref67","_ref68","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref69","_ref70","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref71","_ref72","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref73","_ref74","amountLentCurve2","redeemableBalanceCurve1","_ref75","_ref76","redeemableBalance2","_args51","_context51","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x88","_x89","_x90","_x91","getIdleTokenSupply","_ref77","_callee52","idleTokenSupply","_args52","_context52","_x92","_ref78","_callee53","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args53","_context53","_x93","clearCachedData","useLocalStorage","_ref79","_callee54","_ref80","_ref81","idleTokensTotalSupply","userShare","_context54","_x94","_x95","_callee56","_args56","_context56","_ref83","_callee55","coverageTokens","protocolImage","_context55","_x96","_ref84","_callee57","etherscanEndpoint","_context57","_x97","_callee59","filter_by_status","_args59","_context59","_ref86","_callee58","_ref87","_ref88","_context58","_x98","_ref89","_callee60","fixDecimals","_args60","_context60","_x99","_ref90","_callee61","_ref91","_ref92","_args61","_context61","_x100","_x101","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref93","_callee62","_args62","_context62","_x102","_x103","getProtocolBalance","_ref94","_callee63","_context63","_x104","_x105","getAprs","_ref95","_callee64","_context64","_x106","genericIdleCall","_ref96","_callee65","callParams","_args65","_context65","_x107","estimateGas","_ref97","_callee66","_contract$methods3","_args66","_context66","_x108","_x109","getTxDecodedLogs","_ref98","_callee68","logAddr","decodeLogs","internalTransfers","_context68","_ref99","_callee67","_context67","_x114","_x115","_x110","_x111","_x112","_x113","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee69","_context69","getContractPastEvents","_ref101","_callee70","_args70","_context70","getPastEvents","_x116","_x117","_ref102","_callee71","_contract$methods4","_args71","_context71","_x118","_x119","_ref103","_callee72","_args72","_context72","_x120","_x121","apr2apy","getUnlentBalance","_ref104","_callee73","unlentBalance","_context73","_x122","_ref105","_callee74","_args74","_context74","_x123","_ref106","_callee76","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args76","_context76","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref107","_callee75","_ref108","_ref109","protocolBalance","_context75","_x125","_x126","getGovTokensBalances","total","getTokenConversionRate","_x124","getUniswapConversionRate_path","_ref110","_callee77","unires","_context77","_x127","_ref111","_callee78","tokenConfigFrom","tokenConfigDest","WETHAddr","_context78","_x128","_x129","getCurveDepositedTokens","_ref112","_callee79","idleTokensBalances","remainingCurveTokens","_args79","_context79","_x130","getCurveUnevenTokenAmounts","_ref113","_callee80","amounts","max_burn_amount","unevenAmounts","_context80","getCurveDepositContract","_x131","_x132","_callee81","curveRatesInfo","_context81","strategyTokens","getCurveAPYContract","_callee82","blocksForPrevTokenPrice","_ref116","_ref117","prevTokenPrice","blocksMultiplier","curveAPR","_context82","getCurveTokenSupply","_callee83","_context83","getCurvePoolContract","_callee84","_args84","_context84","_callee85","_args85","_context85","_ref121","_callee86","_ref122","_ref123","_context86","_x133","_callee87","depositContractInfo","_context87","getCurveZapContract","_callee88","zapContractInfo","_context88","_callee89","poolContractInfo","_context89","getCurveSwapContract","_callee90","_context90","getCurveIdleTokensAmounts","_callee92","max_slippage","curveTokenSupply","curveTokenShare","_args92","_context92","_ref129","_callee91","curveIdleTokens","_context91","_x134","getCurveTokensAmounts","_callee94","useCoinIndex","_args94","_context94","_ref131","_callee93","_ref132","_ref133","totalTokenSupply","_context93","_x135","getCurveAmounts","_ref134","_callee96","_args96","_context96","_ref135","_callee95","_context95","_x138","_x136","_x137","getCurveTokenAmount","_ref136","_callee97","_args97","_context97","_x139","getCurveSlippage","_ref137","_callee98","uneven_amounts","_ref138","_ref139","virtualPrice","Sv","_args98","_context98","_x140","_x141","getCompAPR","_ref140","_callee99","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args99","_context99","_x142","_x143","getCompSpeed","_ref141","_callee100","cTokenAddress","compSpeed","_context100","_x144","_ref142","_callee101","annualize","cTokenInfo","compoundAllocationPerc","_ref143","_ref144","cTokenTotalSupply","compoundPoolShare","_args101","_context101","_x145","_callee103","_args103","_context103","_ref146","_callee102","_ref147","_ref148","_context102","_x146","_callee105","_args105","_context105","_ref150","_callee104","_ref151","_ref152","compApr","_context104","_x147","getTokensCsv","_callee108","csv","_context108","prototype","sum","pv","cv","avg","_ref154","_callee107","_context107","_ref155","_callee106","header","aprAvg","scoreAvg","lastRow","_context106","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x149","_x148","_callee110","_args110","_context110","_ref157","_callee109","compTokenBalance","_context109","_x150","speed","getGovTokensUserDistributionSpeed","_ref158","_callee112","govTokensUserDistribution","_args112","_context112","_ref159","_callee111","_context111","_x152","_x151","_ref160","_callee114","govTokensDistribution","_args114","_context114","_ref161","_callee113","govSpeed","_context113","_x154","_x153","_ref162","_callee116","_args116","_context116","_ref163","_callee115","_ref164","_ref165","compoundInfo","_context115","_x157","_x155","_x156","_callee118","_args118","_context118","_ref167","_callee117","tokenConversionRate","fromTokenConfig","_context117","_x158","getGovTokenConfigByAddress","_callee119","checkShowBalance","govTokensEarnings","_args119","_context119","govTokenAmount","_callee122","govTokenConfigForced","_args122","_context122","_ref170","_callee121","govTokensAmounts","_context121","_ref171","_callee120","govTokenAddress","_context120","_x160","_x161","_x159","_callee123","_args123","_context123","_callee124","_ref174","_ref175","gain","fees","_args124","_context124","_ref176","_callee125","_args125","_context125","_x162","getTotalTVL","_callee126","tokensTVL","_context126","getTokensTVL","totalTVL","tokenTVL","_callee130","_context130","_ref179","_callee129","_context129","_ref180","_callee128","oldTokenTVL","idleTokenName","_ref181","_ref182","totalSupply","_ref186","_ref187","oldTokenPrice","oldTotalSupply","_context128","_ref183","_callee127","_ref184","_ref185","govTokenConversionRate","govTokenBalanceConverted","_context127","_x165","_x164","_x163","getSubstackLatestFeed","_callee131","endpointInfo","idleSubstackFeed","latestFeed","_context131","items","getAggregatedStats","_callee132","totalAUM","_args132","_context132","getAggregatedStats_chain","_callee136","avgAPR","_args136","_context136","_ref191","_callee135","_context135","_ref192","_callee134","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context134","_ref193","_callee133","_ref194","_ref195","_context133","_x168","_x167","_x166","getTokenApy","_ref196","_callee137","_context137","_x169","_callee140","_args140","_context140","_ref198","_callee139","_context139","_ref199","_callee138","_ref200","_context138","_x171","_x170","getProtocolsTokensBalances","_callee142","tokenBalances","minTokenBalance","protocolsTokens","_args142","_context142","_ref202","_callee141","tokenContract","_context141","_x172","_ref203","_callee143","_args143","_context143","_x173","_x174","_x175","getAvgAPYStats","_ref204","_callee144","apiResults","_args144","_context144","_x176","_x177","_ref205","_callee145","_conversionRate","_args145","_context145","_x178","_x179","_ref206","_callee146","_ref207","_ref208","_context146","protocolScore","getTokenScoreApi","_x180","_x181","_ref209","_callee147","_context147","_x182","_x183","_ref210","_callee149","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args149","_context149","_ref211","_callee148","addrIndex","protocolApr","protocolApy","_context148","_x185","_x186","_x184","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly"],"mappings":"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","file":"static/js/main.5d593443.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SendTxWithBalance_input__h-oUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Migrate_input__FS2vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './SendTxWithBalance.module.scss';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        className={styles.input}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass ETHWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceETH:null,\n    balanceWETH:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevState.action !== this.state.action;\n    if (actionChanged){\n      this.updateActionData();\n    }\n  }\n\n  async loadBalance(){\n\n    // Init Contract\n    await this.props.initContract(this.props.toolProps.contract.name,this.props.toolProps.contract.address,this.props.toolProps.contract.abi);\n\n    // Load Balances\n    const [\n      balanceETH,\n      balanceWETH\n    ] = await Promise.all([\n      this.functionsUtil.getETHBalance(this.props.account),\n      this.functionsUtil.getTokenBalance('WETH',this.props.account)\n    ]);\n\n    const action = this.state.action || 'wrap';\n    const tokenBalance = action === 'wrap' ? balanceETH : balanceWETH;\n\n    this.setState({\n      action,\n      balanceETH,\n      balanceWETH,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        selectedToken = 'ETH';\n        approveEnabled = true;\n        tokenConfig = {\n          token:'ETH',\n          decimals:18\n        };\n        tokenBalance = this.state.balanceETH;\n        approveDescription = 'To Mint new WETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ETH and get WETH with a 1:1 ratio`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = 'WETH';\n        approveEnabled = false;\n        tokenBalance = this.state.balanceWETH;\n        tokenConfig = this.props.toolProps.contract;\n        approveDescription = 'To withdraw your ETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your WETH and get back ETH with a 1:1 ratio`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} WETH</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ETH</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = 'deposit';\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = 'withdraw';\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n    const depositOnly = !!this.props.depositOnly;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !depositOnly && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'wrap'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.contract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                        }}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ETHWrapper;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchDeposit`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                {\n                  /*\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    text={'You will start earning gov tokens after the batch is executed'}\n                  />\n                  */\n                }\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                      {\n                        /*\n                        <Tooltip\n                          placement={'top'}\n                          message={`Batches are executed twice a week`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                        */\n                      }\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  /*\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                    <Text.span\n                                      fontWeight={500}\n                                      display={'block'}\n                                      color={'copyColor'}\n                                      textAlign={'center'}\n                                    >\n                                      Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                    </Text.span>\n                                  */\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport ETHWrapper from '../ETHWrapper/ETHWrapper';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on sunday and wednesday. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleWETHYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:ETHWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        contract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    const amountLent = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,s.name,checkedStrategies);\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              className={styles.input}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;"],"sourceRoot":""}