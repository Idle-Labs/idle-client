{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","FlexLoader/FlexLoader.js","Title/Title.js","TrancheField/TrancheField.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","fieldComponent","TrancheField","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","children","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","fields","mr","themeMode","textTransform","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","console","log","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakedBalance","CDORewards","functions","stakedBalance","toConsumableArray","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref15","_ref15$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref24","_callee15","stakingDistributions","stakingRewards","_context15","_ref25","_callee14","eventFilters","transfers","_context14","CDO","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref26","_callee17","_ref27","_ref28","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref29","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref30","_callee19","tokensDistribution","_context19","_ref31","_callee18","firstHarvest","latestHarvest","tokenApr","tokenApy","lastAmount","totalAmount","distributionSpeedUnit","tokensPerDay","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","_ref32","_ref33","_firstHarvest","_latestHarvest","firstBlock","_ref34","_ref35","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","_context18","_address","rewardsRate","apr2apy","apr","apy","getBlockInfo","genericContractCallCached","returnValues","total","_x15","_x13","_x14","_ref36","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref37","_ref38","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context21","sort","_ref39","_callee20","trancheTokenTransferEvent","tokenTransferEvent","_ref40","_ref41","blockInfo","tokenConversionRate","_context20","_x19","trancheTokenAmount","hashKey","trancheTokens","tokenAmountConverted","_x16","_x17","_x18","getTrancheUserTransactions","_ref42","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref43","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref44","_callee24","_context24","_x26","_x27","_x28","_ref45","_callee25","_ref46","_ref47","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref50","_ref51","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref52","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x31","_ref53","_callee28","_context28","_x32","match","_ref54","_callee29","_context29","_x33","_ref55","_callee30","_context30","_x34","items","to_address","_ref56","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref62","_callee38","_ref63","_ref64","_context38","getTransactionReceipt","_x36","_ref65","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref66","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref67","_callee41","processTxs","_args41","_context41","_x40","_ref68","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref69","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref70","_callee46","minedTxs","_context46","_ref71","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref72","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref73","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref74","_callee53","txsToProcess","_args53","_context53","_ref75","_callee52","_context52","_ref76","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref77","_callee48","_context48","_x54","_x55","_ref78","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref79","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref80","_callee54","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args54","_context54","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x60","_ref81","_callee55","error_callback","config","_args55","_context55","post","catch","_x61","_ref82","_callee56","_args56","_context56","_x62","_ref83","_callee57","apiKeyIndex","apiKey","_args57","_context57","_x63","_ref84","_callee58","return_data","_args58","_context58","_x64","makeCachedPostRequest","_ref85","_callee59","_args59","_context59","_x65","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee60","page","googlePageviewInfo","isOrigin","_args60","_context60","ga","_ref87","_callee62","googleEventsInfo","debugEnabled","originOk","_args62","_context62","analytics","google","addPostfixForTestnet","availableNetworks","_ref88","_callee61","_context61","hitCallback","hitCallbackFail","_x67","_x68","_x66","createContract","_ref89","_callee63","_context63","_x69","_x70","_x71","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee66","activeOnly","whitelist","proposals","validProposals","_args66","_context66","addr","_ref91","_callee65","checkedStrategies","_context65","end","author","snapshot","strategies","_ref92","_callee64","tokenContract","_context64","_x73","_x72","getAprsFromApi","_callee67","endpointInfo","aprs","_args67","_context67","_ref94","_callee68","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args68","_context68","_x74","getTokenExchangeRate","_ref95","_callee69","exchangeRateParams","exchangeRate","_context69","_x75","_x76","getTokenDecimals","_ref96","_callee70","_context70","_x77","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee71","idleTokenConfig","feeDistributorConfig","_context71","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee72","contractPaused","_args72","_context72","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref99","_callee74","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context74","lastAllocationsPromise","_ref100","_callee73","lastAllocations","_context73","_x79","_x80","alloc","_x78","_ref101","_callee75","oldContractBalance","oldContractTokenDecimals","oldContractName","_context75","_x81","_x82","_ref102","_callee76","eventName","_args76","_context76","getContractPastEvents","_x83","_x84","estimateMethodGasUsage","_ref103","_callee77","methodParams","_contract$methods","functionCall","gasLimit","_ref104","_ref105","_args77","_context77","getGasPrice","estimateGas","_x85","_x86","_ref106","_callee78","userAddress","signedParameters","callback_receipt","_contract$methods2","_context78","on","once","confirmationNumber","receipt","_x87","_x88","_x89","_x90","_x91","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref107","_callee79","biconomyInfo","res","_context79","limits","apiId","headers","x-api-key","_x92","sendTxWithPermit","_ref108","_callee80","_contract$methods3","messageToSign","_this$getSignaturePar","_context80","encodeABI","personal","sign","_x93","_x94","_x95","_x96","_x97","_x98","buildBiconomyErc20ForwarderTx","_ref109","_callee81","permitType","callData","buildParams","_context81","txGas","erc20ForwarderClient","buildTx","_x99","_x100","_x101","_x102","_x103","_ref110","_callee83","_context83","_ref111","_callee82","_context82","_x105","_x106","_x104","sendBiconomyTxWithErc20Forwarder","_ref112","_callee84","req","metaInfo","txResponse","fetchReceiptIntervalId","_context84","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x107","_x108","_x109","_x110","sendBiconomyTxWithPersonalSign","_ref113","_callee85","_this$getSignaturePar2","_context85","getNonce","_x111","_x112","_x113","_x114","signPermitEIP2612","_ref114","_callee86","erc20Name","owner","spender","deadline","domain","permit","domainData","_context86","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x115","_x116","_x117","_x118","_x119","_x120","_x121","_x122","signPermit","_ref115","_callee87","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args87","_context87","net","getId","round","nonceMethod","pow","allowed","response","_x123","_x124","_x125","_ref116","_callee88","permitParams","methodAbi","useNonce","_args88","_context88","_jsonInterface","f","unshift","_x126","_x127","_x128","_x129","_x130","_x131","_x132","sendSignedTx","_ref117","_callee89","MetaTransaction","dataToSign","_context89","_x133","_x134","_x135","_x136","_x137","checkTokenApproved","_ref118","_callee90","contractAddr","walletAddr","_ref119","_ref120","allowance","_context90","getAllowance","gte","_x138","_x139","_x140","_ref121","_callee91","_context91","_x141","_x142","_x143","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee93","highestValue","_args93","_context93","lendRates","aprInfo","tokenAPR","_ref123","_callee92","_context92","_x144","_ref124","_callee94","_args94","_context94","_x145","_x146","getTrancheStakingRewards","_ref125","_callee96","_args96","_context96","_ref126","_callee95","tokenGlobalConfig","stakingRewardsContract","_context95","_x149","_x147","_x148","_ref127","_callee97","field","addGovTokens","_args97","_context97","loadTrancheField","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_ref128","_callee98","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref129","_ref130","totalSupply","virtualPrice","_ref131","_ref132","lastPrice1","staked1","_ref133","_ref134","deposited1","lastPrice","_ref135","_ref136","redeemable1","staked2","_ref137","_ref138","earningsStart","trancheApy2","deposited3","earningsEnd","_ref139","_ref140","trancheFee","earningsCounter","feesEnd","feesStart","_ref141","_ref142","deposited4","redeemable3","_ref143","_ref144","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","_ref145","_ref146","_ref147","_ref148","earningsPerc","secondsFromFirstTx","_ref149","_ref150","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args98","_context98","Strategy","initContract","AA","BB","getTokenTotalSupply","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x158","_x159","_x160","_x161","_x162","_x163","_x164","loadAssetField","_ref151","_callee99","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref152","_ref153","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref154","_ref155","amountLentCurve1","redeemableBalanceCurve","_ref156","_ref157","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref158","_ref159","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref160","_ref161","tokenPriceFirstDeposit","_ref162","_ref163","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref164","_ref165","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref166","_ref167","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref168","_ref169","amountLentCurve2","redeemableBalanceCurve1","_ref170","_ref171","redeemableBalance2","_args99","_context99","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x165","_x166","_x167","_x168","getIdleTokenSupply","_ref172","_callee100","idleTokenSupply","_args100","_context100","_x169","getIdleTokenPriceWithFee","_ref173","_callee101","_ref174","_ref175","fee","priceWFee","_args101","_context101","eq","_x170","_x171","_ref176","_callee102","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args102","_context102","_x172","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref177","_callee103","_ref178","_ref179","idleTokensTotalSupply","userShare","_context103","_x173","_x174","open","_callee105","coverProtocolConfig","nexusMutualConfig","_args105","_context105","_ref181","_callee104","coverage","coverageTokens","protocolImage","_context104","tokens","expirationTimestamp","utc","_x175","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref182","_callee107","incidentsInfo","_ref183","_ref184","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context107","directProps","startBlock","contractInfo","buyer","_ref185","_callee106","cover","coverId","claimSubmittedEvent","_ref186","_ref187","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref188","_ref189","_context106","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x177","_x176","getBatchedDepositExecutions","_ref190","_callee108","_context108","_x178","getBatchedDeposits","_callee110","filter_by_status","batchDepositConfig","batchedDeposits","_args110","_context110","_ref192","_callee109","currBatchIndex","batchIndex","_ref193","_ref194","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context109","_x179","getETHBalance","_ref195","_callee111","fixDecimals","_args111","_context111","_x180","_ref196","_callee112","_ref197","_ref198","_args112","_context112","ERC20","_x181","_x182","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref199","_callee113","_args113","_context113","_x183","_ref200","_callee114","_args114","_context114","_x184","_ref201","_callee115","_args115","_context115","_x185","_x186","getProtocolBalance","_ref202","_callee116","_context116","_x187","_x188","getAprs","_ref203","_callee117","_context117","addresses","_x189","genericIdleCall","_ref204","_callee118","callParams","_args118","_context118","_x190","_ref205","_callee119","_contract$methods4","_args119","_context119","_x191","_x192","_ref206","_callee121","_args121","_context121","_ref207","_callee120","_context120","_x194","_x195","_x193","getTxDecodedLogs","_ref208","_callee123","logAddr","decodeLogs","internalTransfers","_context123","_ref209","_callee122","_context122","_x200","_x201","_x196","_x197","_x198","_x199","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee124","_context124","_callee125","_args125","_context125","getBlock","_ref212","_callee126","_args126","_context126","getPastEvents","_x202","_x203","_ref213","_callee127","_args127","_context127","_x204","_x205","cachedContractCall","_ref214","_callee128","_args128","_context128","_x206","_x207","_ref215","_callee129","_contract$methods5","_args129","_context129","_x208","_x209","_ref216","_callee130","async","_args130","_context130","_x210","_x211","getUnlentBalance","_ref217","_callee131","unlentBalance","_context131","_x212","_ref218","_callee132","_args132","_context132","_x213","getLastAllocations","_ref219","_callee134","tokenAllocations","_context134","_ref220","_callee133","_context133","_x215","_x216","_x214","_ref221","_callee135","protocolsAprs","_ref222","_ref223","govTokensBalances","_args135","_context135","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x217","getSushiswapPoolTokenPrice","_ref224","_callee136","_ref225","_ref226","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref227","_ref228","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context136","getSushiswapConversionRate","_x218","_ref229","_callee137","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context137","_x219","_x220","_ref230","_callee138","unires","_args138","_context138","addressForPrice","_x221","_x222","getCurveDepositedTokens","_ref231","_callee139","idleTokensBalances","remainingCurveTokens","_args139","_context139","_x223","getCurveUnevenTokenAmounts","_ref232","_callee140","amounts","max_burn_amount","unevenAmounts","_context140","getCurveDepositContract","_x224","_x225","_callee141","curveRatesInfo","_context141","strategyTokens","getCurveAPYContract","_callee142","blocksForPrevTokenPrice","_ref235","_ref236","prevTokenPrice","blocksMultiplier","curveAPR","_context142","getCurveTokenSupply","_callee143","_context143","getCurvePoolContract","_callee144","_args144","_context144","_callee145","_args145","_context145","_ref240","_callee146","_ref241","_ref242","_context146","_x226","_callee147","depositContractInfo","_context147","getCurveZapContract","_callee148","zapContractInfo","_context148","_callee149","poolContractInfo","_context149","getCurveSwapContract","_callee150","migrationContractInfo","_context150","getCurveIdleTokensAmounts","_callee152","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args152","_context152","_ref248","_callee151","coinIndex","curveIdleTokens","_context151","migrationParams","_x227","getCurveTokensAmounts","_callee154","useCoinIndex","_args154","_context154","_ref250","_callee153","_ref251","_ref252","idleTokenPrice","totalTokenSupply","_context153","_x228","getCurveAmounts","_ref253","_callee156","_args156","_context156","_ref254","_callee155","_context155","_x231","_x229","_x230","getCurveTokenAmount","_ref255","_callee157","_args157","_context157","_x232","getCurveSlippage","_ref256","_callee158","uneven_amounts","depositContract","_ref257","_ref258","Sv","_args158","_context158","_x233","_x234","_ref259","_callee159","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref260","_ref261","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args159","_context159","IAaveIncentivesController","emissionPerSecond","_x235","_callee161","_args161","_context161","_ref263","_callee160","_ref264","_ref265","_context160","_x236","getWMaticApr","_ref266","_callee162","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args162","_context162","_x237","_x238","getStkAaveApr","_ref267","_callee163","aaveConversionRate","stkAaveAPR","stkAaveValue","_args163","_context163","_x239","_x240","getCompAPR","_ref268","_callee164","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args164","_context164","_x241","_x242","getCompSpeed","_ref269","_callee165","cTokenAddress","compSpeed","_context165","_x243","_ref270","_callee166","cTokenInfo","compoundAllocationPerc","_ref271","_ref272","cTokenTotalSupply","compoundPoolShare","_args166","_context166","_x244","_callee168","_args168","_context168","_ref274","_callee167","_ref275","_ref276","_context167","_x245","_callee170","_args170","_context170","_ref278","_callee169","_ref279","_ref280","compApr","_context169","_x246","getTokensCsv","_callee173","csv","_context173","prototype","sum","pv","cv","avg","_ref282","_callee172","_context172","_ref283","_callee171","rates","header","aprAvg","scoreAvg","lastRow","_context171","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x248","_x247","_callee175","convertToken","_args175","_context175","_ref285","_callee174","compTokenBalance","_context174","_x249","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref286","_callee177","govTokensUserDistribution","_args177","_context177","_ref287","_callee176","_context176","_x251","_x250","getGovTokensDistributionSpeed","_ref288","_callee179","govTokensDistribution","_args179","_context179","_ref289","_callee178","govSpeed","_context178","_x253","_x252","getGovTokensAprs","_ref290","_callee181","govTokensAprs","_args181","_context181","_ref291","_callee180","_ref292","_ref293","_ref294","_ref295","cTokenConfig","_context180","aprTooltipMode","_x256","_x254","_x255","_callee183","_args183","_context183","_ref297","_callee182","govTokenBalance","fromTokenConfig","_context182","_x257","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee184","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args184","_context184","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref299","_callee186","govTokensAmounts","_context186","getGovTokensUserAmounts","_ref300","_callee185","govTokenIndex","govTokenAddress","_context185","getGovTokenAddessByIndex","_x260","_x261","_x258","_x259","_ref301","_callee187","_context187","_x262","_x263","_ref302","_callee188","_context188","_x264","_x265","_callee191","govTokenConfigForced","_args191","_context191","_ref304","_callee190","_context190","_ref305","_callee189","_context189","_x267","_x268","_x266","getTokenFees","_callee192","_args192","_context192","_callee193","_ref308","_ref309","feePercentage","gain","fees","_args193","_context193","_ref310","_callee194","_args194","_context194","_x269","getTotalTVL","_callee195","tokensTVL","_context195","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee199","_context199","_ref313","_callee198","_context198","_ref314","_callee197","oldTokenTVL","idleTokenName","_ref315","_ref316","oldTokenConfig","_ref320","_ref321","oldTokenPrice","oldTotalSupply","_context197","showAUM","_ref317","_callee196","_ref318","_ref319","govTokenConversionRate","govTokenBalanceConverted","_context196","_x272","oldProtocols","oldProtocol","protocolPos","_x271","_x270","getSubstackLatestFeed","_callee200","idleSubstackFeed","latestFeed","_context200","getTrancheAggregatedStats","_callee204","totalAUM","_args204","_context204","_ref324","_callee203","_context203","_ref325","_callee202","_context202","_ref326","_callee201","_ref327","_ref328","_context201","_x275","_x274","_x273","getAggregatedStats","_callee206","allNetworks","networkIds","_args206","_context206","_ref330","_callee205","tvls","_context205","getAggregatedStats_chain","_x276","_callee210","avgAPR","_args210","_context210","_ref332","_callee209","_context209","_ref333","_callee208","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context208","_ref334","_callee207","_ref335","_ref336","_context207","_x279","_x278","_x277","getTokenApy","_ref337","_callee211","_context211","_x280","getTokensToMigrate","_callee214","_args214","_context214","_ref339","_callee213","_context213","_ref340","_callee212","_ref341","_context212","_x282","_x281","getProtocolsTokensBalances","_callee216","tokenBalances","minTokenBalance","protocolsTokens","_args216","_context216","_ref343","_callee215","_context215","_x283","getTokenConversionRateField","_ref344","_callee217","_args217","_context217","getTokenConversionRateUniswap","_x284","_x285","_ref345","_callee218","_args218","_context218","_x286","_x287","_x288","getAvgAPYStats","_ref346","_callee219","apiResults","_args219","_context219","_x289","_x290","_ref347","_callee220","ToTokenConfig","_args220","_context220","_x291","_ref348","_callee221","count","_conversionRate","_args221","_context221","_x292","_x293","getTokenScore","_ref349","_callee222","_ref350","_ref351","tokenScore","_context222","protocolScore","getTokenScoreApi","_x294","_x295","_ref352","_callee223","scores","_context223","_x296","_x297","_ref353","_callee224","idleGovTokenShowAPR","idleAPR","_args224","_context224","_x298","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","unstakeWithBalance","Button","transactionSucceeded","unstake","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","buyInstructions","PortfolioEquityTranches","transactionsList","lastBlockNumber","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","startTokenConversionRate","lastTokenConversionRate","trancheAAInfos","trancheBBInfos","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewards","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","staked","reedemable","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","18","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","LDO","CRV","FRAX3CRV","MIM3CRV","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.b6fc0558.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerDay = this.BNify(0);\n      let tokensPerYear = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      if (rewardsRateMethod){\n        [\n          tokensPerSecond,\n          totalAmount,\n          tranchePoolSize\n        ] = await Promise.all([\n          this.genericContractCall(trancheConfig.CDORewards.name,rewardsRateMethod),\n          this.genericContractCall(token,'balanceOf',[trancheConfig.CDORewards.address]),\n          this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n        ]);\n\n        tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n        tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n\n        tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n        tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n        tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n        convertedTokensPerYear = tokensPerYear.times(conversionRate);\n        tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n        tokenApy = this.apr2apy(tokenApr).times(100);\n\n        distributionSpeed = tokensPerDay;\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n        // console.log('getTrancheRewardTokensInfo',tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokensDistribution);\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n        const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n          const [\n            prevBlockInfo,\n            lastBlockInfo,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n\n        output = this.BNify(0);\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          // Hot-fix for convex\n          if (protocol === 'convex'){\n            apr = apr.times(100);\n          }\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          // console.log('trancheApy',tokenConfig.token,trancheApy.toString(),apr.toString(),apy.toString());\n          // tokensApy[tokenConfig.token] = baseApy;\n          \n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                // console.log('trancheApy',token,rewardTokenInfo,tokenApy.toString(),apy.toString());\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest') => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getUniswapConversionRate',path,unires);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig.token;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          startTokenConversionRate,\n          lastTokenConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,firstBlockNumber) : null,\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,lastBlockNumber) : null,\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice']) : [],\n        ]);\n\n        // console.log(token,firstBlockNumber,lastBlockNumber,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            if (conversionRateField){\n              if (index === trancheAAInfos.length-1){\n                tokenDataAA[conversionRateField] = lastTokenConversionRate;\n              } else {\n                tokenDataAA[conversionRateField] = startTokenConversionRate;\n              }\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            if (conversionRateField){\n              if (index === trancheBBInfos.length-1){\n                tokenDataBB[conversionRateField] = lastTokenConversionRate;\n              } else {\n                tokenDataBB[conversionRateField] = startTokenConversionRate;\n              }\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n                const trancheTokens = trancheTokenBalance[token][tranche];\n                const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                let newBalance = trancheTokens.times(tranchePrice);\n\n                // Set new balance and tranchePrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tranchePrice = tranchePrice;\n                filteredBalances = [lastFilteredTx];\n\n                // if (token === 'FEI'){\n                //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokens.toFixed(5),tranchePrice.toFixed(5),newBalance.toFixed(5),filteredBalances);\n                // }\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n            //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (!this.props.chartToken && conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n            //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1876,\n\t\"./testnet/mumbai/index.json\": 1877\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4444;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4452,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4453,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4454,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4463,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4464,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4465,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4655,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4656,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4657,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4658,\n\t\"./mainnet/v1/index.json\": 1876,\n\t\"./networks.json\": 1875,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4665,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4666,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4667,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4676,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4677,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4678,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4868,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4869,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4870,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4871,\n\t\"./testnet/mumbai/index.json\": 1877\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4445;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      autoFarming:['CVX','CRV'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : (this.props.token===\"FRAX3CRV\")?`images/tokens/${this.props.token}.png`:`images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}