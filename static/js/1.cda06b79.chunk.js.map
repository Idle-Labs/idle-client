{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","HoverImage/HoverImage.js","NetworkIndicator/NetworkIndicator.js","utilities/components/Swipeable.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DashboardHeader/DashboardHeader.js","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestedAmount","_callee3","vestedAmount","governanceTokenName","governanceTokenConfig","_ref4","_ref5","vestingEnd","lastUpdate","vestingBegin","vestingAmount","blockTimestamp","_args3","_context3","getVestingContract","toUpperCase","Promise","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","parseInt","Date","now","gt","times","minus","div","decimals","_callee4","vestingContract","_args4","_context4","initContract","VesterABI","claimVestedTokens","_callee5","callback","callbackReceipt","_args5","_context5","contractMethodSendWrapper","delegateVesting","_callee6","delegate","_args6","_context6","getVestingAmount","_callee7","_args7","_context7","getCurrentDelegate","_callee8","_args8","_context8","getCurrentVotes","_callee9","votes","_args9","_context9","getVotingPeriod","_callee10","votingPeriod","_context10","name","getTimelockDelay","_callee11","delay","_context11","queueProposal","_ref14","_callee12","proposalId","_args12","_context12","toBN","_x","apply","executeProposal","_ref15","_callee13","_args13","_context13","_x2","proposeAndVoteFor","_ref16","_callee14","targets","values","signatures","calldatas","description","batcher","contract","txs","_context14","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref17","_callee15","_args15","_context15","_x8","_x9","_x10","_x11","_x12","_ref18","_callee16","support","_args16","_context16","_x13","_x14","setDelegate","_ref19","_callee17","_args17","_context17","_x15","getDelegatesChanges","_callee18","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context18","eth","getBlockNumber","Math","min","push","getContractPastEvents","reduce","delegations","d","getLatestDelegators","_callee20","delegateChanges","latestDelegators","_args20","_context20","t0","sort","b","asyncForEach","_ref22","_callee19","_context19","returnValues","delegator","toDelegate","_x16","getDelegateDelegators","_ref23","_callee21","delegatesVotesChanges","latest_delegators","_args21","_context21","t1","getDelegatesVotesChanges","reverse","forEach","voteChangedTx","find","tx","transactionHash","toLowerCase","delegatorBalance","newBalance","previousBalance","filter","delegatorInfo","_x17","_callee22","_context22","getDelegates","_callee24","limit","_ref26","_ref27","all_votes","delegateAccounts","delegates","_args24","_context24","getVotes","e","_e$returnValues","keys","_ref28","_callee23","delegators","_context23","parseFloat","_x18","index","rank","toFixed","vote_weight","proposals","v","voter","splice","getProposalParams","_callee25","govContractName","_ref30","_ref31","proposalThreshold","proposalMaxOperations","params","_context25","getCachedData","setCachedData","_callee27","governanceContracts","lastContract","_context27","_ref33","_callee26","governanceContract","contractVotes","_context26","map","_e$returnValues2","vote","_x19","_x20","getProposals","_callee31","voted_by","filter_by_state","startBlock","enumerateProposalState","contracts","proposalCounts","allProposals","_args31","_context31","p","state","_ref35","_callee28","proposalCount","_context28","_x21","_ref36","_callee30","governanceContractName","lastCount","proposalGets","proposalStateGets","_arr","_i","i","_ref37","_ref38","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_context30","t2","t3","Array","from","n","_ref39","_callee29","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref40","_ref41","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","proposal","_context29","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x24","_x25","_x22","_x23","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","size","Component","DashboardMenu","logout","buyModalOpened","isHover","setConnector","connectorName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendGoogleAnalyticsEvent","eventCategory","eventAction","context","unsetConnector","setState","govModalOpened","_this2","menu","currentNetworkId","getRequiredNetworkId","landingStrategies","visibleStrategies","visible","availableNetworks","includes","enabledEnvs","currentEnv","governanceRoute","baseRoute","dashboardRoute","visibleLinks","menuLink","isVisible","showMobile","mobile","isMobile","isDarkTheme","themeMode","darkModeEnabled","isProdEnv","checkUrlOrigin","isChristmas","checkChristmas","logoSrc","logoHeight","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","height","pb","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","src","position","borderBottom","theme","colors","divider","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","py","pr","mx","boxShadow","display","borderRadius","justifySelf","handleClick","isDashboard","goToSection","px","onMouseEnter","onMouseLeave","_HoverImage_HoverImage__WEBPACK_IMPORTED_MODULE_9__","hoverOn","noHover","hover","imageProps","mr","alignSelf","_NetworkIndicator_NetworkIndicator__WEBPACK_IMPORTED_MODULE_14__","style","overflowY","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","activeImage","imageDark","image","inactiveImage","imageInactiveDark","imageInactive","my","key","route","href","onClick","closeMenu","textDecoration","border","selected","backgroundColor","align","icon","whiteSpace","setThemeMode","HoverImage","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","networkId","networkConfig","config","network","requiredNetwork","getRequiredNetwork","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","outerColor","isSearchable","innerProps","customOptionProps","pl","notInteractive","noShadow","options","CustomOptionValue","imageSrc","data","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","bg","innerxProps","cursor","isCorrectNetwork","isActive","__webpack_require__","__webpack_exports__","Swipeable","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_swipeable__WEBPACK_IMPORTED_MODULE_1__","handlers","useSwipeable","onSwiped","eventData","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","touchAction","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonProps","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","eventLabel","updateLastOpenTimestamp","notificationsChanged","notificationsParams","getStoredItem","setLocalStorage","currTime","currentNetwork","isMainnet","governanceConfig","batchDepositConfig","polygonBridgeConfig","blocksPerWeek","oneWeekAgoBlock","polygonBridgeEnabled","enabled","governanceEnabled","getSubstackLatestFeed","getSnapshotProposals","getPolygonBridgeTxs","latestFeed","activeSnapshotProposals","polygonTransactions","governanceProposals","batchedDeposits","start","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","body","governanceProposalUrl","iconProps","hash","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","transactions","status","completed","polygonBridgeBaseUrl","action","included","exited","token","tokenSymbol","depositBaseUrl","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","textOverflow","AccountModal","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","accountChanged","acccount","section","viewOnly","rows","renderBalances","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","requiredNetworkChanged","accountInizialized","idleGovTokenConfig","idleGovTokenEnabled","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","toggleMenu","menuOpened","alt","borderRight","ShortHash","src_Notifications_Notifications","setGovModal","connectAndValidateAccount","components_AccountModal","RoundButton","alignContent","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","error","getTransactionError","newState","claimCallback","claimRewards","bgLayer","mainColor","background","titleProps","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DashboardHeader","loadData","networkChanged","menuRightBorder","src_MenuAccount_MenuAccount","hoverColor","components_GovModal","list"],"mappings":"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","file":"static/js/1.cda06b79.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestedAmount = async (account=null) => {\n    let vestedAmount = this.functionsUtil.BNify(0);\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n      const governanceTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',governanceTokenName.toUpperCase()]);\n      let [\n        vestingEnd,\n        lastUpdate,\n        vestingBegin,\n        vestingAmount,\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall('VestingContract','vestingEnd'),\n        this.functionsUtil.genericContractCall('VestingContract','lastUpdate'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingBegin'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingAmount')\n      ]);\n\n      if (vestingAmount && vestingBegin && vestingEnd && lastUpdate){\n        vestingEnd = this.functionsUtil.BNify(vestingEnd);\n        lastUpdate = this.functionsUtil.BNify(lastUpdate);\n        vestingBegin = this.functionsUtil.BNify(vestingBegin);\n        vestingAmount = this.functionsUtil.BNify(vestingAmount);\n        const blockTimestamp = this.functionsUtil.BNify(parseInt(Date.now()/1000));\n\n        if (blockTimestamp.gt(vestingEnd)) {\n          vestedAmount = await this.functionsUtil.getContractBalance(governanceTokenName,account);\n        } else {\n          vestedAmount = vestingAmount.times(blockTimestamp.minus(this.functionsUtil.BNify(lastUpdate))).div(vestingEnd.minus(vestingBegin));\n        }\n        vestedAmount = this.functionsUtil.fixTokenDecimals(vestedAmount,governanceTokenConfig.decimals);\n      }\n    }\n    return vestedAmount;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  claimVestedTokens = async (account=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','claim',[],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    // console.log(contractName, 'castVote', [proposalId, support]);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getLatestDelegators = async (delegateChanges=null) => {\n    delegateChanges = delegateChanges || await this.getDelegatesChanges();\n    \n    delegateChanges.sort((a, b) => {\n      return a.blockNumber < b.blockNumber ? 1 : -1;\n    })\n\n    const latestDelegators = {};\n    await this.functionsUtil.asyncForEach(delegateChanges, async (d) => {\n      const values = d.returnValues;\n      if (!values.delegator || latestDelegators[values.delegator]){\n        return;\n      }\n      latestDelegators[values.delegator] = {\n        votes:0,\n        delegator:values.delegator,\n        toDelegate:values.toDelegate\n      };\n\n      const votes = await this.getTokensBalance(values.delegator);\n      latestDelegators[values.delegator].votes = +votes/1e18;\n\n      // console.log(values.delegator,+votes/1e18,values.toDelegate);\n    });\n\n    // console.log('getLatestDelegators',latestDelegators);\n\n    return latestDelegators;\n  }\n\n  getDelegateDelegators = async (delegate,delegateChanges=null,delegatesVotesChanges=null) => {\n    delegateChanges = delegateChanges || await this.getDelegatesChanges();\n    delegatesVotesChanges = delegatesVotesChanges || await this.getDelegatesVotesChanges();\n\n    const latest_delegators = {};\n    delegateChanges.reverse().forEach( d => {\n      const values = d.returnValues;\n      if (!values.delegator || latest_delegators[values.delegator]){\n        return;\n      }\n      const voteChangedTx = delegatesVotesChanges.find( tx => tx.transactionHash.toLowerCase() === d.transactionHash.toLowerCase() && tx.returnValues.delegate.toLowerCase() === delegate.toLowerCase() );\n      const delegatorBalance = voteChangedTx ? this.functionsUtil.BNify(voteChangedTx.returnValues.newBalance).minus(voteChangedTx.returnValues.previousBalance) : null;\n      const votes = delegatorBalance ? +delegatorBalance/1e18 : 0;\n\n      // console.log('delegator',values.delegator,'delegate',values.toDelegate,'delegate hash',d.transactionHash,'voteChanged hash',voteChangedTx ? voteChangedTx.transactionHash : null,'prevBalance',voteChangedTx ? +voteChangedTx.returnValues.previousBalance/1e18 : null,'newBalance',voteChangedTx ? +voteChangedTx.returnValues.newBalance/1e18 : null,'votes',votes);\n\n      latest_delegators[values.delegator] = {\n        votes,\n        delegator:values.delegator,\n        toDelegate:values.toDelegate\n      };\n    });\n\n    return Object.values(latest_delegators).filter( delegatorInfo => {\n      return delegatorInfo.toDelegate.toLowerCase() === delegate.toLowerCase();\n    })/*.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    })*/;\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegateChanges,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesChanges(),\n      this.getDelegatesVotesChanges()\n    ]);\n      \n    const latestDelegators = await this.getLatestDelegators(delegateChanges);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    // console.log('getDelegatesVotesChanges',delegations,'delegateChanges',delegateChanges);\n\n    let delegates = [];\n    await this.functionsUtil.asyncForEach(Object.keys(delegateAccounts), async (delegate) => {\n      const delegators = Object.values(latestDelegators).filter( delegatorInfo => {\n        return delegatorInfo.toDelegate.toLowerCase() === delegate.toLowerCase() && parseFloat(delegatorInfo.votes)>0;\n      }).sort((a, b) => {\n        return a.votes < b.votes ? 1 : -1;\n      });\n\n      const votes = +delegateAccounts[delegate]/1e18;\n      delegates.push({\n        votes,\n        delegate,\n        delegators\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    \n    const governanceContracts = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let lastContract=null;\n    let fromBlock=null;\n    const votes=[];\n    Object.values(governanceContracts).forEach(async (governanceContract,index)=>{\n      const contractName=governanceContract.name;\n      const toBlock=governanceContract.toBlock;\n      if(!lastContract)\n      {\n        fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n      }\n      else\n      {\n        fromBlock=lastContract.toBlock;\n      }\n      lastContract=governanceContract;\n      let contractVotes = await this.functionsUtil.getContractPastEvents(contractName,'VoteCast', {fromBlock, toBlock});\n      if (contractVotes){\n        contractVotes = contractVotes.map( e => {\n          const {\n              voter,\n              votes,\n              support,\n              proposalId\n          } = e.returnValues;\n          return {\n            votes,\n            voter,\n            support,\n            proposalId\n          }\n        });\n        Object.values(contractVotes).forEach(vote=>{\n          votes.push(vote);\n        })\n      }\n    });\n   \n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContracts = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contracts = Object.values(governanceContracts);\n\n    // const proposalCounts= await Object.values(governanceContracts).map(async (governanceContract)=>{\n    const proposalCounts = await this.functionsUtil.asyncForEach(contracts,async (governanceContract)=>{\n      const proposalCount = await this.functionsUtil.genericContractCall(governanceContract.name,'proposalCount');\n      return proposalCount;\n    });\n\n    let fromBlock = null;\n    let allProposals = [];\n\n    await this.functionsUtil.asyncForEach(contracts, async(governanceContract,index) => {\n      \n      const governanceContractName = governanceContract.name;\n      const proposalCount = parseInt(await proposalCounts[index]);\n      const lastCount = parseInt(await proposalCounts[index-1]);\n      if (!proposalCount){\n        return [];\n      }\n      if(index===0){\n        fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n      }\n      else{\n        fromBlock = contracts[index-1].toBlock;\n      }\n\n      const proposalGets = [];\n      const proposalStateGets = [];\n      for (const i of Array.from(Array(proposalCount),(n,i) => i+1)) {\n        if (!index || i>lastCount){\n          proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n          proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n        }\n      }\n\n      if(!proposalStateGets || !proposalGets){\n        return false;\n      }\n      const toBlock = governanceContract.toBlock;\n      let [\n        votes,\n        proposals,\n        proposalStates,\n        proposalQueuedEvents,\n        proposalCreatedEvents,\n        proposalCanceledEvents,\n        proposalExecutedEvents,\n      ] = await Promise.all([\n        this.getVotes(),\n        Promise.all(proposalGets),\n        Promise.all(proposalStateGets),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock}),\n      ]);\n\n      if (proposals){\n        proposals.reverse();\n      } else {\n        proposals = [];\n      }\n      if (proposalStates){\n        proposalStates.reverse();\n      } else {\n        proposalStates = [];\n      }\n      if (proposalQueuedEvents){\n        proposalQueuedEvents.reverse();\n      } else {\n        proposalQueuedEvents = [];\n      }\n      if (proposalCreatedEvents){\n        proposalCreatedEvents.reverse();\n      } else {\n        proposalCreatedEvents = [];\n      }\n      if (proposalCanceledEvents){\n        proposalCanceledEvents.reverse();\n      } else {\n        proposalCanceledEvents = [];\n      }\n      if (proposalExecutedEvents){\n        proposalExecutedEvents.reverse();\n      } else {\n        proposalExecutedEvents = [];\n      }\n\n\n      // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n        const p = proposals[i];\n\n        if (!p || !p.id){\n          return;\n        }\n\n        const proposalId = parseInt(p.id);\n        const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n        const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n        const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n        const [\n          endBlockInfo,\n          queuedBlockInfo,\n          createdBlockInfo,\n          canceledBlockInfo,\n          executedBlockInfo,\n        ] = await Promise.all([\n          p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n          queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n          createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n          canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n          executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n        ]);\n\n        // Init states array\n        p.states = [];\n\n        // Create created state\n        const createdState = {\n          state: \"Pending\",\n          blockNumber: createdEvent.blockNumber,\n          end_time: createdBlockInfo.timestamp,\n          start_time: createdBlockInfo.timestamp,\n          trx_hash: createdEvent.transactionHash\n        };\n        p.states.push(createdState);\n\n        // Push active state\n        const activeState = {\n          end_time: null,\n          trx_hash: null,\n          state: \"Active\",\n          blockNumber: createdEvent.blockNumber,\n          start_time: createdState.start_time\n        };\n        p.states.push(activeState);\n\n        // Push canceled state\n        if (canceledEvent){\n          const canceledState = {\n            end_time: null,\n            state: \"Canceled\",\n            blockNumber: canceledEvent.blockNumber,\n            start_time: canceledBlockInfo.timestamp,\n            trx_hash: canceledEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n          p.states.push(canceledState);\n        } else {\n          // Push queued state\n          if (queuedEvent){\n            const succeededState = {\n              end_time: null,\n              trx_hash: null,\n              state: \"Succeeded\",\n              blockNumber: queuedEvent.blockNumber,\n              start_time: queuedBlockInfo.timestamp,\n            };\n\n            const queuedState = {\n              end_time: null,\n              state: \"Queued\",\n              blockNumber: queuedEvent.blockNumber,\n              trx_hash: queuedEvent.transactionHash,\n              start_time: queuedBlockInfo.timestamp,\n            };\n\n            // Update previous state end_time\n            p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n            // Push Succeeded state\n            p.states.push(succeededState);\n            // Push queued state\n            p.states.push(queuedState);\n          }\n\n          // Push executed state\n          if (executedEvent){\n            const executedState = {\n              end_time: null,\n              state: \"Executed\",\n              blockNumber: executedEvent.blockNumber,\n              start_time: executedBlockInfo.timestamp,\n              trx_hash: executedEvent.transactionHash\n            }\n            // Update previous state end_time\n            p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n            p.states.push(executedState);\n          }\n        }\n\n        // console.log(governanceContractName,i,proposalStates,proposalStates[i]);\n\n        // Check for defeated or expired\n        p.state = enumerateProposalState(proposalStates[i]);\n        const foundState = p.states.find( s => (s.state === p.state) );\n        if (!foundState){\n          const endState = {\n            state: p.state,\n            end_time: null,\n            trx_hash: null,\n            blockNumber: p.endBlock,\n            start_time: endBlockInfo.timestamp,\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n          p.states.push(endState);\n        }\n\n        p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n        const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n        p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n        // Idle\n        p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n        p.description = description.split(/\\n|↵/g);\n        p.description.shift();\n        p.description = p.description.join(\"\\n\");\n        p.description = p.description.replace(/\\n/g,\"<br />\")\n\n        // Overwrite proposal details\n        const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n        if (proposalDetails){\n          Object.keys(proposalDetails).forEach( attr => {\n            p[attr] = proposalDetails[attr];\n          });\n        }\n\n        const proposal = {\n          eta:p.eta,\n          actions:{\n            values,\n            targets,\n            calldatas,\n            signatures\n          },\n          id:proposalId,\n          title:p.title,\n          state:p.state,\n          votes:p.votes,\n          states:p.states,\n          executed:p.executed,\n          endBlock:p.endBlock,\n          canceled:p.canceled,\n          forVotes:p.forVotes,\n          proposer:p.proposer,\n          timestamp:p.timestamp,\n          startBlock:p.startBlock,\n          description:p.description,\n          againstVotes:p.againstVotes\n        };\n\n        // Save proposal\n        proposals[i] = proposal;\n      });\n\n      Object.values(proposals).forEach(proposal=>{\n        if (proposal){\n          allProposals.push(proposal);\n        }\n      });\n    });\n\n    allProposals = allProposals.sort((a, b) => (a.id < b.id ? 1 : -1));\n  \n    if (allProposals.length){\n      this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,allProposals,1800);\n    }\n\n    if (filter_by_state){\n      allProposals = allProposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      allProposals = allProposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      allProposals = allProposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n\n    return allProposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport { Flex, Box, Icon, Text, Image, Link } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass DashboardMenu extends Component {\n  state = {\n    logout: false,\n    buyModalOpened: false,\n    isHover: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  setBuyModalOpened(buyModalOpened) {\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length) {\n      return null;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const landingStrategies = this.functionsUtil.getGlobalConfig(['landingStrategies']);\n    const visibleStrategies = Object.keys(landingStrategies).filter(s => landingStrategies[s].visible && (!landingStrategies[s].availableNetworks.length || landingStrategies[s].availableNetworks.includes(currentNetworkId)) && (!landingStrategies[s].enabledEnvs.length || landingStrategies[s].enabledEnvs.includes(this.props.currentEnv)) );\n\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceRoute = governanceConfig.baseRoute;\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + '/' + visibleStrategies[0];\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length) {\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === \"dark\";\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig([\n      \"dashboard\",\n      \"theme\",\n      \"darkModeEnabled\"\n    ]);\n\n    const isProdEnv = this.functionsUtil.checkUrlOrigin();\n    const isChristmas = this.functionsUtil.checkChristmas();\n    let logoSrc = isProdEnv ? (!isDarkTheme ? \"images/logo-gradient.svg\" : \"images/logo-dark.svg\") : (!isDarkTheme ? \"images/logo-gradient-beta.png\" : \"images/logo-white-beta.png\");\n\n    let logoHeight = '42px';\n    if (isChristmas && isProdEnv){\n      logoHeight = '62px';\n      logoSrc = !isDarkTheme ? \"images/logo-gradient-christmas.svg\" : \"images/logo-dark-christmas.svg\";\n    }\n\n    return (\n      <Flex p={0} height={\"100%\"} flexDirection={\"column\"}>\n        <Flex\n          p={4}\n          pb={2}\n          mb={3}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          justifyContent={\"flex-start\"}\n        >\n          <RouterLink\n            to={\"/\"}\n          >\n            <Image\n              src={logoSrc}\n              height={logoHeight}\n              position={\"relative\"}\n            />\n          </RouterLink>\n        </Flex>\n        <Box\n          mb={3}\n          pb={3}\n          width={1}\n          justifyContent={\"center\"}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <DashboardCard\n            {...this.props}\n            isInteractive={true}\n            cardProps={{\n              py: 1,\n              pr: 1,\n              mx: 'auto',\n              mb: [0, 3],\n              width: 0.8,\n              boxShadow: 0,\n              display: \"flex\",\n              borderRadius: 1,\n              justifySelf: \"center\",\n              justifyContent: \"center\",\n            }}\n            handleClick={e => this.props.isDashboard ? this.props.goToSection(governanceRoute, false) : this.props.goToSection(dashboardRoute, false) }\n          >\n            <Flex\n              px={2}\n              py={1}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              onMouseEnter={e => this.setState({ isHover: true })}\n              onMouseLeave={e => this.setState({ isHover: false })}\n            >\n              <HoverImage\n                hoverOn={this.state.isHover}\n                noHover={'images/sidebar/switch.svg'}\n                hover={'images/sidebar/switchHover.svg'}\n                imageProps={{\n                  mr: 2,\n                  width: \"16px\",\n                  height: \"16px\",\n                  display: \"inline-flex\"\n                }}\n              />\n              <Text\n                fontSize={1}\n                color={\"text\"}\n                fontWeight={500}\n              >\n                Switch to {this.props.isDashboard ? 'Governance' : 'Dashboard'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n        </Box>\n        {\n          this.props.isMobile && (\n            <Flex\n              width={'82%'}\n              alignSelf={'center'}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'space-between'}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          )\n        }\n        <Flex\n          px={3}\n          height={'100%'}\n          style={{\n            overflowY:'scroll'\n          }}\n          flexDirection={\"column\"}\n        >\n          {\n            visibleLinks.map((menuLink, menuIndex) => {\n              const isExternalLink = menuLink.isExternalLink;\n              const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n              const activeImage = isDarkTheme && menuLink.imageDark ? menuLink.imageDark : menuLink.image;\n              const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n              return (\n                <Box\n                  width={\"auto\"}\n                  my={[1, \"8px\"]}\n                  key={`menu-${menuIndex}`}\n                >\n                  <LinkComponent\n                    to={menuLink.route}\n                    href={menuLink.route}\n                    onClick={this.props.closeMenu}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Flex\n                      py={2}\n                      px={3}\n                      borderRadius={2}\n                      flexDirection={\"row\"}\n                      alignItems={\"center\"}\n                      border={menuLink.selected ? 2 : null}\n                      backgroundColor={menuLink.selected ? \"menuHover\" : \"transparent\"}\n                    >\n                      <Flex\n                        py={1}\n                        width={1}\n                        alignItems={\"center\"}\n                        flexDirection={\"row\"}\n                        justifyContent={\"flex-start\"}\n                      >\n                        {\n                          menuLink.image ? (\n                            <Image\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              align={\"center\"}\n                              height={[\"1.2em\",\"1.6em\"]}\n                              src={menuLink.selected ? activeImage : inactiveImage}\n                            />\n                          ) : menuLink.icon && (\n                            <Icon\n                              name={menuLink.icon}\n                              color={\n                                menuLink.selected\n                                  ? \"menuIconActive\"\n                                  : isDarkTheme\n                                    ? \"white\"\n                                    : \"dark-gray\"\n                              }\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              size={ this.props.isMobile ? \"1.2em\" : \"1.6em\"}\n                            />\n                          )\n                        }\n                        <Text\n                          fontWeight={3}\n                          color={\"text\"}\n                          fontSize={[1,2]}\n                          textAlign={\"center\"}\n                          style={{\n                            whiteSpace: \"nowrap\"\n                          }}\n                        >\n                          {menuLink.label}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </LinkComponent>\n                </Box>\n              );\n            })\n          }\n        </Flex>\n\n        {darkModeEnabled && (\n          <Flex\n            my={2}\n            width={\"auto\"}\n            height={\"auto\"}\n            flexDirection={\"column\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Link\n              style={{ textDecoration: \"none\" }}\n              onClick={e =>\n                this.props.setThemeMode(\n                  this.props.themeMode === \"light\" ? \"dark\" : \"light\"\n                )\n              }\n            >\n              <Flex\n                p={2}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Icon\n                  mr={2}\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  color={\"copyColor\"}\n                  name={\"Brightness2\"}\n                />\n                <Flex\n                  px={\"0.2em\"}\n                  width={\"3.4em\"}\n                  height={\"1.6em\"}\n                  alignItems={\"center\"}\n                  borderRadius={\"1.6em\"}\n                  backgroundColor={\"cellText\"}\n                  justifyContent={this.props.themeMode === \"light\" ? \"flex-end\" : \"flex-start\"}\n                >\n                  <Box\n                    width={\"1.3em\"}\n                    height={\"1.3em\"}\n                    borderRadius={\"1.3em\"}\n                    backgroundColor={\"copyColor\"}\n                  ></Box>\n                </Flex>\n                <Icon\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  name={\"WbSunny\"}\n                  color={\"copyColor\"}\n                />\n              </Flex>\n            </Link>\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default DashboardMenu;\n","import { Image } from \"rimble-ui\"\nimport React, { Component } from 'react'\nclass HoverImage extends Component {\n\n    render() {\n        return (\n            <Image\n                src={this.props.hoverOn ? this.props.hover : this.props.noHover}\n                {...this.props.imageProps}\n            />\n        )\n    }\n}\nexport default HoverImage;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks: [],\n    defaultNetwork: null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks() {\n\n    if (!this.props.networkInitialized) {\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network', 'availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network', 'enabledNetworks']);\n    const activeNetworks = enabledNetworks.map(networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value: networkId,\n        config: networkConfig,\n        label: networkConfig.name,\n        network: networkConfig.name.toLowerCase(),\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find(network => network.value === requiredNetwork.id);\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId) {\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized) {\n      this.setState({\n        defaultNetwork: null\n      }, () => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.network}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={['1.2em','1.3em']}\n              height={['1.2em','1.3em']}\n            />\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.network}.svg`;\n      return (\n        <Flex\n          style={{\n            flex: '1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          bg={\"cardBg\"}\n          px={0}\n        >\n          <Flex\n            {...props.innerxProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{ cursor: 'pointer' }}\n            justifyContent={'flex-start'}\n            bg={\"cardBg\"}\n\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={['1.2em','1.3em']}\n              height={['1.2em','1.3em']}\n            />\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        outerColor={\"cardBg\"}\n        name={'network'}\n        isDashboard={true}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px: 1,\n          py: 0,\n          height: '42px',\n          boxShadow: 0,\n          borderRadius: 0,\n          border: 0,\n          backgroundColor: \"cardBg\"\n\n        }, this.props.innerProps)}\n        customOptionProps={{\n          px: 0,\n          pl: 3,\n          pr: 0\n        }}\n        notInteractive=\"true\"\n        noShadow=\"true\"\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n        <DashboardCard\n          {...this.props}\n          cardProps={{\n            boxShadow: 0,\n            borderRadius: 0,\n            border: 0,\n            px: [2, 3],\n            display: 'flex',\n            width: [1, 'auto'],\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'cardBg',\n\n            height: (this.props.innerProps && this.props.innerProps.height) || '42px',\n          }}\n          isInteractive={false}\n          isActive={false}\n        >\n          <Loader size={'20px'} />\n        </DashboardCard>\n      );\n  }\n}\n\nexport default NetworkIndicator;","import React from \"react\";\nimport { useSwipeable } from 'react-swipeable';\n\nexport default function Swipeable(){\n\n  const params = arguments[0];\n\n  const handlers = useSwipeable({\n    onSwiped: (eventData) => params.callback(eventData),\n    delta: 10,                            // min distance(px) before a swipe starts\n    preventDefaultTouchmoveEvent: false,  // call e.preventDefault *See Details*\n    trackTouch: true,                     // track touch input\n    trackMouse: false,                    // track mouse input\n    rotationAngle: 0,                     // set a rotation angle\n  });\n\n  return (\n  \t<div {...handlers} style={{ touchAction: 'pan-x' }}>\n  \t\t{params.children}\n  \t</div>\n  );\n}","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened: false,\n    notifications: [],\n    mouseOverBell: false,\n    unreadNotifications: 0,\n    lastOpenTimestamp: null,\n    mouseOverNotifications: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened) {\n      this.setState({\n        tabOpened: false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length > 0) {\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged) {\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter(n => n.timestamp > this.state.lastOpenTimestamp).length : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp() {\n    const lastOpenTimestamp = Date.now();\n\n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams', notificationsParams, true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications() {\n\n    // Get stored lastOpenTimestamp for notifications\n    const currTime = Date.now();\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const isMainnet = currentNetwork.id === 1;\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools', 'batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools', 'polygonBridge']);\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network', 'blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    const polygonBridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n    const batchedDepositsEnabled = false; //batchDepositConfig.enabled && batchDepositConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      polygonTransactions,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      polygonBridgeEnabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n      governanceEnabled ? this.governanceUtil.getProposals(null, 'Active', oneWeekAgoBlock) : null,\n      batchedDepositsEnabled ? this.functionsUtil.getBatchedDeposits(this.props.account, 'executed') : null\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter(n => (n.enabled && n.start <= currTime && n.end > currTime));\n\n    // Show latest Substack for 1 week\n    if (latestFeed) {\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7, 'd'))) {\n        notifications.push({\n          link: latestFeed.link,\n          image: '/images/substack.png',\n          timestamp: latestFeedDate._d.getTime(),\n          title: this.functionsUtil.htmlDecode(latestFeed.title),\n          text: this.functionsUtil.htmlDecode(latestFeed.content),\n          date: latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      }\n    }\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network', 'providers', 'snapshot', 'urls', 'proposals']);\n\n    if (activeSnapshotProposals) {\n      activeSnapshotProposals.forEach(p => {\n        const text = p.body.replace(/^[#]*/, '');\n        // const text = p.msg.payload.name.replace(/^[#]*/,'');\n        notifications.push({\n          text,\n          image: '/images/snapshot.png',\n          timestamp: p.start * 1000,\n          link: snapshotProposalBaseUrl + p.id,\n          title: p.title,\n          date: this.functionsUtil.strToMoment(p.start * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals) {\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance', 'baseRoute']) + '/proposals/';\n      governanceProposals.forEach(p => {\n        notifications.push(\n          {\n            text: p.title,\n            iconProps: {\n              color: '#00acff'\n            },\n            icon: 'LightbulbOutline',\n            timestamp: p.timestamp * 1000,\n            title: 'Governance Proposal',\n            hash: governanceProposalUrl + p.id,\n            date: this.functionsUtil.strToMoment(p.timestamp * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits) {\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach(batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp * 1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon: 'DoneAll',\n          title: 'Batch Deposit Executed',\n          hash: batchDepositBaseUrl + batchToken,\n          iconProps: {\n            color: this.props.theme.colors.transactions.status.completed\n          },\n          date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    if (polygonTransactions) {\n      const polygonBridgeBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${polygonBridgeConfig.route}/`;\n      const polygonWithdrawalsToExit = polygonTransactions.filter(tx => tx.action === 'Withdraw' && tx.included && !tx.exited);\n      polygonWithdrawalsToExit.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(10, 'd'))) {\n          const text = `You can Exit ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.token} from Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Withdraw Completed',\n            hash: polygonBridgeBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n\n      const depositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/best/`;\n      const polygonCompletedDeposits = polygonTransactions.filter(tx => tx.action === 'Deposit' && tx.included);\n      polygonCompletedDeposits.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(1, 'd'))) {\n          const text = `Your ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.tokenSymbol} are now available in Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Deposit Completed',\n            hash: depositBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n    }\n\n    notifications = notifications.sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell) {\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications) {\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab() {\n    this.setState((prevState) => ({\n      tabOpened: !prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification) {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link) {\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications > 0;\n    const iconColor = hasUnreadNotifications ? '#0239FF' : 'dashboardBg';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            color={iconColor}\n            name={'Notifications'}\n            {...this.props.iconProps}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell, (hasUnreadNotifications ? styles.ring : null), (this.state.tabOpened || this.state.notifications.length > 0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications &&\n            <Box\n              className={styles.counter}\n            >\n              {this.state.notifications.length}\n            </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n          <DashboardCard\n            cardProps={{\n              style: {\n                right: 0,\n                maxHeight: '21em',\n                overflow: 'scroll',\n                position: 'absolute',\n                top: this.props.isMobile ? '2.8em' : '3em',\n              },\n              minWidth: ['91vw', '22em'],\n              onMouseOut: (e) => this.setMouseOverNotifications(false),\n              onMouseOver: (e) => this.setMouseOverNotifications(true),\n            }}\n          >\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              {\n                this.state.notifications.length > 0 ?\n                  this.state.notifications.map((n, index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration: 'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={e => this.openNotification(n)}\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification, this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index < this.state.notifications.length - 1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                  : (\n                    <Text\n                      py={2}\n                      textAlign={'center'}\n                    >\n                      There are no notifications.\n                    </Text>\n                  )\n              }\n            </Flex>\n          </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport Notifications from \"../Notifications/Notifications\";\nimport AccountModal from \"../utilities/components/AccountModal\";\nimport { Flex, Icon, Image, Text, Link, Loader } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass MenuAccount extends Component {\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null,\n    logout: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountInizialized || contractsInitialized) {\n      this.loadIdleTokenBalance();\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      this.setState({\n          isModalOpen: null\n      },() => {\n        this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance() {\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const idleGovTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', 'IDLE']);\n    const idleGovTokenEnabled = idleGovTokenConfig.enabled && idleGovTokenConfig.availableNetworks.includes(currentNetwork.id);\n    let idleTokenBalance = null;\n\n    if (idleGovTokenEnabled) {\n      idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed) {\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n    }\n\n    return this.setState({\n      idleTokenBalance\n    });\n  }\n\n  toggleModal = modalName => {\n    this.setState(state => ({\n      ...state,\n      isModalOpen: state.isModalOpen === modalName ? null : modalName\n    }));\n  };\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem(\"walletProvider\", false, null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig([\"connectors\", walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return this.props.account ? (\n      <Flex\n        width={1}\n        mr={[0,5]}\n        bg={\"cardBg\"}\n        flexDirection={[\"column\", \"row\"]}\n        alignItems={[\"flex-start\", \"center\"]}\n      >\n        <Flex\n          px={[2,0]}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          width={[1, \"fit-content\"]}\n          justifyContent={\"space-between\"}\n        >\n          {\n            this.props.isMobile && (\n              <Flex\n                ml={1}\n                mr={2}\n                width={'12%'}\n              >\n                <Icon\n                  size={\"2.4em\"}\n                  color={\"copyColor\"}\n                  onClick={this.props.toggleMenu}\n                  name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.isMobile && (\n              <Flex\n                mx={2}\n                width={'fit-content'}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n          {\n            this.props.isMobile && (\n              <Flex\n                width={'87%'}\n                justifyContent={\"space-between\"}\n              >\n                <Link\n                  style={{\n                    width:'80%',\n                    display:'flex',\n                    overflow:'hidden',\n                    textDecoration:'none'\n                  }}\n                  onClick={e => this.toggleModal(\"account\")}\n                >\n                  <Flex\n                    p={0}\n                    width={'100%'}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={[\"center\", \"flex-start\"]}\n                  >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                  </Flex>\n                </Link>\n                <Notifications\n                  flexProps={{ p: 2 }}\n                  iconProps={{ p: 1, size: \"2.5em\" }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          !this.props.isMobile && (\n            <Flex\n              pr={[2,0]}\n              style={{\n                flex: \"1 1 auto\"\n              }}\n              width={[1, \"auto\"]}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Link\n                mr={3}\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.toggleModal(\"account\")}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        mr={2}\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Flex>\n              </Link>\n              <Link\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.props.setGovModal(true)}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  <Image\n                    mr={2}\n                    width={\"1.7em\"}\n                    height={\"1.7em\"}\n                    display={\"inline-flex\"}\n                    src={`images/tokens/IDLE.svg`}\n                  />\n                  {\n                    this.state.idleTokenBalance ? (\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1, 2]}\n                        color={\"copyColor\"}\n                      >\n                        {this.state.idleTokenBalance.toFixed(2)} IDLE\n                      </Text>\n                    ) : <Loader size={'20px'} />\n                  }\n                </Flex>\n              </Link>\n              <Flex\n                ml={3}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  onClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n                >\n                  <Flex\n                    p={0}\n                    width={1}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"flex-start\"}\n                    onMouseEnter={e => this.setState({ isHover: true })}\n                    onMouseLeave={e => this.setState({ isHover: false })}\n                  >\n                    <HoverImage\n                      hoverOn={this.state.isHover}\n                      noHover={'images/logout.svg'}\n                      hover={'images/logoutHover.svg'}\n                      imageProps={{\n                        mx: 2,\n                        width: \"24px\",\n                        height: \"24px\",\n                        display: \"inline-flex\"\n                      }}\n                    />\n                  </Flex>\n                </Link>\n                <Notifications\n                  {...this.props}\n                  iconProps={{\n                    size: \"2.1em\"\n                  }}\n                  flexProps={{\n                    ml: 2\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        <AccountModal\n          {...this.props}\n          isOpen={this.state.isModalOpen === \"account\"}\n          closeModal={e => this.toggleModal(\"account\")}\n        />\n      </Flex>\n    ) : (\n      <Flex\n        px={2}\n        width={1}\n        mr={[0,5]}\n      >\n        <Flex\n          width={1}\n          alignItems={\"center\"}\n          style={{ justifyContent: \"flex-start\" }}\n          justifyContent={[\"flex-start\", \"flex-end\"]}\n        >\n          {this.props.isMobile && (\n            <Flex mr={2}>\n              <Icon\n                size={\"2.4em\"}\n                color={\"copyColor\"}\n                onClick={this.props.toggleMenu}\n                name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n              />\n            </Flex>\n          )}\n          {\n            !this.props.isMobile && (\n              <Flex\n                width={1}\n                justifyContent={['space-between', 'flex-start']}\n              >\n                <NetworkIndicator\n                  innerProps={{\n                    px: 1,\n                    py: 0,\n                    width: ['100%', 'auto'],\n                    height: ['45px', '54px']\n                  }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={\"row\"}\n          alignItems={[\"center\"]}\n          justifyContent={\"flex-end\"}\n        >\n          <RoundButton\n            {...this.props}\n            buttonProps={{\n              width:'auto',\n              boxShadow: \"none\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\"\n              }\n            }}\n            handleClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n          >\n            <Flex\n              mr={2}\n              width={1}\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n            >\n              <Image\n                ml={0}\n                pl={0}\n                mr={[2, 3]}\n                align={\"center\"}\n                height={\"1.4em\"}\n                src={\"images/sidebar/plug_white.svg\"}\n              />\n              <Text\n                pr={1}\n                mr={2}\n                fontWeight={3}\n                color={\"white\"}\n                fontSize={[2]}\n                alignContent={\"center\"}\n                justifyContent={\"center\"}\n              >\n                Connect to Idle\n              </Text>\n            </Flex>\n          </RoundButton>\n          <Notifications\n            {...this.props}\n            iconProps={{\n              size: \"2.2em\"\n            }}\n            flexProps={{\n              ml: 2\n            }}\n          />\n        </Flex>\n      </Flex >\n    );\n  }\n}\n\nexport default MenuAccount;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (accountChanged || requiredNetworkChanged || contractsInitialized){\n      this.loadTokenInfo();\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetworkId);\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.svg'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                {\n                  governanceEnabled && (\n                    <Link\n                      href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                    >\n                      <Flex\n                        zIndex={10}\n                        position={'relative'}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          color={'white'}\n                          fontWeight={400}\n                        >\n                          Go to governance\n                        </Text>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'white'}\n                          name={\"OpenInNew\"}\n                        />\n                      </Flex>\n                    </Link>\n                  )\n                }\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport { Box, Flex, Text, Button } from \"rimble-ui\";\nimport MenuAccount from \"../MenuAccount/MenuAccount\";\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass DashboardHeader extends Component {\n  state = {\n    unclaimed: null,\n    vestingAmount: null,\n    govModalOpened: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const networkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (accountChanged || networkChanged) {\n      await this.loadData();\n    }\n  }\n\n  async loadData() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled && this.props.account) {\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(\n        this.props.account\n      );\n      this.setState({\n        unclaimed\n      });\n    }\n  }\n\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: \"logout\",\n      eventCategory: \"Connect\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async exit() {\n    this.props.goToSection(\"/\", false);\n  }\n\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box >\n        <Flex\n          py={2}\n          width={1}\n          bg={\"cardBg\"}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={[\"flex-end\", \"center\"]}\n          borderBottom={`1px solid ${this.props.theme.colors.menuRightBorder}`}\n        >\n          <MenuAccount\n            width={1}\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n            goToSection={this.props.goToSection.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) && (\n            <DashboardCard\n              cardProps={{\n                p: 2,\n                mt: 3,\n                width: 1\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                flexDirection={[\"column\", \"row\"]}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={\"15px\"}\n                  color={\"flashColor\"}\n                  textAlign={\"center\"}\n                >\n                  IDLE Governance Token is now available,\n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={\"primary\"}\n                    fontSize={\"15px\"}\n                    hoverColor={\"primary\"}\n                    href={\n                      \"https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7\"\n                    }\n                  >\n                    discover more\n                  </ExtLink>\n                  ! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to\n                  claim.\n                </Text>\n                <Button\n                  ml={[0, 2]}\n                  mt={[2, 0]}\n                  size={\"small\"}\n                  mainColor={\"blue\"}\n                  onClick={e => this.setGovModal(true)}\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false)}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}