{"version":3,"sources":["../node_modules/function-batch/node_modules/lodash/isObject.js","../node_modules/function-batch/node_modules/lodash/_root.js","../node_modules/function-batch/node_modules/lodash/_Symbol.js","../node_modules/function-batch/index.js","../node_modules/function-batch/node_modules/lodash/debounce.js","../node_modules/function-batch/node_modules/lodash/now.js","../node_modules/function-batch/node_modules/lodash/_freeGlobal.js","../node_modules/function-batch/node_modules/lodash/toNumber.js","../node_modules/function-batch/node_modules/lodash/isSymbol.js","../node_modules/function-batch/node_modules/lodash/_baseGetTag.js","../node_modules/function-batch/node_modules/lodash/_getRawTag.js","../node_modules/function-batch/node_modules/lodash/_objectToString.js","../node_modules/function-batch/node_modules/lodash/isObjectLike.js","../node_modules/web3-batched-send/src/utils/batched-send.js","Governance/ProposalListFilters/ProposalListFilters.module.scss","Governance/NewProposal/NewProposal.module.scss","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js"],"names":["module","exports","value","type","freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","Symbol","ex","debounce","defer","resolve","reject","promise","Promise","rslv","rjct","func","wait","options","arrArg","deferred","debouncedFunc","result","apply","undefined","arguments","err","arr","_len","length","args","Array","_key","concat","isArray","i","arr2","from","_toConsumableArray","isObject","now","toNumber","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","this","leadingEdge","clearTimeout","cancel","flush","Date","global","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","replace","isBinary","test","slice","baseGetTag","isObjectLike","symbolTag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","isOwn","call","tag","unmasked","e","_regeneratorRuntime","_objectSpread","_asyncToGenerator","functionBatch","ABI","constant","inputs","name","outputs","payable","stateMutability","web3","transactionBatcherContractAddress","privateKey","transactionBatcher","eth","Contract","pendingBatches","batchedSend","_ref","mark","_callee","transactions","_ref2","batchIndex","batch","batchSend","wrap","_context","prev","next","push","all","map","p","t","method","estimateGas","then","gas","_","filter","_pendingBatches","reduce","acc","datas","encodeABI","targets","to","totalGas","totalValue","values","methods","t0","t1","accounts","t2","t3","sent","t4","t5","t6","address","t7","t8","data","t9","signTransaction","t10","rawTransaction","t11","receipt","console","info","t12","error","sendSignedTransaction","on","stop","_x","radioBtn","input","ProposalField","state","functionsUtil","setProps","props","FunctionsUtil","loadUtils","prevProps","prevState","icon","color","output","fieldInfo","proposal","assign","fieldProps","fontWeight","fontSize","style","maxWidth","overflow","whiteSpace","textOverflow","flexProps","justifyContent","keys","forEach","formattedDate","strToMoment","timestamp","format","react_default","a","createElement","index_es","alignItems","align","size","isMobile","id","title","forVotes","BNify","div","againstVotes","totalVotes","plus","formatMoney","toFixed","support","delegate","toLowerCase","vote","votes","find","v","voter","SmartNumber","number","Component","ProposalListFilters","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","_this","setState","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","_this2","mb","top","width","zIndex","flexDirection","position","DashboardCard","cardProps","py","px","transition","isInteractive","handleClick","cursor","onClick","mt","borderTop","theme","colors","divider","filters","filterCategory","filterValues","key","flexBasis","flex","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","label","checked","className","styles","onChange","Text","mainColor","ml","filterName","mr","textTransform","hoverColor","textAlign","ProposalsList","page","loading","rowsPerPage","totalRows","totalPages","pending","active","canceled","defeated","succeeded","queued","expired","executed","processedRows","lastBlockNumber","processList","proposals","sort","b","ceil","preventDefault","pageChanged","proposalsChanged","JSON","stringify","filtersEnabled","hasActiveFilters","hasRows","m","FlexLoader","minHeight","loaderProps","textProps","text","pt","Governance_ProposalListFilters_ProposalListFilters","bind","TableHeader","cols","index","proposalId","TableRow","rowProps","goToSection","fieldComponent","rowId","cardId","height","prevPage","nextPage","h3","fontFamily","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","delegates","maxRows","splice","delegatesChanged","delegateId","Overview","totalSupply","dataLoaded","votesDelegated","governanceUtil","GovernanceUtil","loadData","getDelegates","getProposals","getTotalSupply","d","parseFloat","Title","pr","StatsCard","labelTooltip","titleMinHeight","pl","Governance_ProposalsList_ProposalsList","fields","mobile","parentProps","Governance_DelegatesList_DelegatesList","DelegateVote","newDelegate","processing","txHash","checkNewDelegate","checkAddress","currentDelegate","changeDelegate","target","setDelegate","tx","eventData","eventCategory","eventAction","eventLabel","getTransactionError","sendGoogleAnalyticsEvent","loadUserData","transactionHash","_this3","isUndelegated","account","canClose","right","icononly","closeFunc","TxProgressBar","waitText","hash","endMessage","cancelTransaction","required","borderRadius","borderColor","backgroundColor","boxShadow","placeholder","border","RoundButton","buttonProps","mx","disabled","redeem","ConnectBox","Delegate","Breadcrumb","path","Governance_DelegateVote_DelegateVote","NewProposal","txError","actionValue","customABI","description","validated","newAction","editAction","actionInputs","actionValid","customAddress","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","availableContracts","validateForm","checkInputs","loadFunctionsOptions","getGlobalConfig","contractName","field","contractABI","parse","getContractABI","f","includes","unshift","newState","valid","isValidJSON","fieldPattern","getPatternByFieldType","match","returnString","RegExp","inputValue","inputIndex","inputInfo","inputValid","validateField","split","n","toBN","substr","contract","getContractByName","_address","inputTypes","calldata","abi","encodeParameters","signature","join","action","params","function","_this4","signatures","calldatas","propose","_this5","completed","gte","proposalThreshold","onSubmit","handleSubmit","borderBottom","h4","handleInput","rows","actionIndex","titleParentProps","titleProps","setEditAction","display","changeContract","pattern","changeFunction","valueChange","fieldType","inputChange","addAction","deleteAction","actionBg","proposalMaxOperations","setNewAction","balance","fixTokenDecimals","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","castVote","callback","Governance_ProposalField_ProposalField","lte","toggleDelegateBox","onMouseDown","isActive","gt","ProposalDetails","showActionParams","callbackReceipt","queueProposal","executeProposal","window","creationTime","states","start_time","lastState","pop","hasVotes","forVotesPerc","times","againstVotesPerc","endTime","blocksToSeconds","votingPeriod","forVotesAddrs","lt","againstVotesAddrs","canQueue","canExecute","getTime","timelockDelay","utc","ExtLink","href","getEtherscanAddressUrl","proposer","ShortHash","lineHeight","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","param","paramIndex","stateInfo","stateIndex","rel","getEtherscanTransactionUrl","trx_hash","wordBreak","dangerouslySetInnerHTML","__html","background","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","contractsInitialized","item_id","foundProposal","pathLink","CardIconButton","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","rank","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","Dashboard","menu","baseRoute","modalTitle","activeModal","blockNumber","currentRoute","modalContent","pageComponent","currentSection","selectedSection","selectedSubsection","timeoutId","resetModal","openTooltipModal","setActiveModal","logout","regenerator_default","setConnector","initWeb3","submenu","selected","route","component","bgColor","primary","isExternalLink","location","sectionRoute","section","subm","setCurrentSection","loadMenu","loadParams","accountInizialized","showResetButton","prevParams","accountChanged","isGovernance","newRoute","scrollTo","getBlockNumber","getVotingPeriod","getTimelockDelay","getProposalParams","getCurrentVotes","getTokensBalance","getCurrentDelegate","PageComponent","innerHeight","bottom","menuRightBorder","borderRight","DashboardMenu","overflowY","overflowX","DashboardHeader","urlParams","textSize","TooltipModal","closeModal","content","isOpen"],"mappings":"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","file":"static/js/4.83643cc0.chunk.js","sourcesContent":["/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar debounce = _interopDefault(require('lodash/debounce'));\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar defer = function defer() {\n  var resolve = void 0;\n  var reject = void 0;\n  var promise = new Promise(function (rslv, rjct) {\n    resolve = rslv;\n    reject = rjct;\n  });\n  return {\n    promise: promise,\n    resolve: resolve,\n    reject: reject\n  };\n};\n\nvar proxyFunction = function proxyFunction(func, wait, options) {\n  var arrArg = [];\n  var deferred = defer();\n\n  var callThenResetArgs = function callThenResetArgs() {\n    try {\n      var result = func.apply(undefined, arguments); // Resolves with either a data, or a promise.\n\n      deferred.resolve && deferred.resolve(result);\n    } catch (err) {\n      deferred.reject && deferred.reject(err);\n    }\n\n    arrArg = [];\n    deferred = defer();\n  };\n\n  var debouncedFunc = debounce(callThenResetArgs, wait, options);\n  return function (arr) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    arrArg = arrArg.concat(arr);\n    debouncedFunc.apply(undefined, [arrArg].concat(_toConsumableArray(args)));\n    return deferred.promise;\n  };\n};\n\nmodule.exports = proxyFunction;","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;","var root = require('./_root');\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\n\nvar now = function now() {\n  return root.Date.now();\n};\n\nmodule.exports = now;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var _regeneratorRuntime = require(\"/Users/samuelecester/Desktop/git/idle-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/samuelecester/Desktop/git/idle-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _toConsumableArray = require(\"/Users/samuelecester/Desktop/git/idle-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/Users/samuelecester/Desktop/git/idle-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar functionBatch = require('function-batch'); // ABI for transaction batcher contract.\n\n\nvar ABI = [{\n  constant: false,\n  inputs: [{\n    name: 'targets',\n    type: 'address[]'\n  }, {\n    name: 'values',\n    type: 'uint256[]'\n  }, {\n    name: 'datas',\n    type: 'bytes[]'\n  }],\n  name: 'batchSend',\n  outputs: [],\n  payable: true,\n  stateMutability: 'payable',\n  type: 'function'\n}];\n\nmodule.exports = function (web3, transactionBatcherContractAddress, privateKey, wait // The batch time window.\n) {\n  // Instantiate the transaction batcher contract.\n  var transactionBatcher = new web3.eth.Contract(ABI, transactionBatcherContractAddress); // Keep track of batches in the mempool.\n\n  var pendingBatches = []; // Calls to this function will be debounced into one call with all of the used arguments concatenated into an array.\n\n  var batchedSend = functionBatch(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(transactions) {\n      var _ref2;\n\n      var batchIndex, batch, batchSend;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Keep track of the index of the new batch, if any, so we can reference it in the confirmation handler below.\n              batchIndex = transactions.length > 0 ? pendingBatches.push(transactions) - 1 : pendingBatches.length; // Remove all transactions that would now fail, from pending batches.\n\n              _context.next = 3;\n              return Promise.all(pendingBatches.map(function (p) {\n                return Promise.all(p.map(function (t) {\n                  return t.method.apply(t, _toConsumableArray(t.args ? t.args : [])).estimateGas({\n                    value: t.value || 0\n                  }).then(function (gas) {\n                    return _objectSpread({}, t, {\n                      args: t.args || [],\n                      gas: gas,\n                      value: t.value || 0\n                    });\n                  }, function (_) {\n                    return undefined;\n                  });\n                })).then(function (p) {\n                  return p.filter(function (t) {\n                    return t;\n                  });\n                });\n              })).then(function (_pendingBatches) {\n                return pendingBatches = _pendingBatches;\n              });\n\n            case 3:\n              // Build data for the batch transaction using all the transactions in the new batch and all the transactions in previous pending batches.\n              // We do this because if we have pending batches by the time a new batch arrives, it means that their gas prices were too low, so sending a new batch transaction with the same nonce\n              // that includes the contents of the new batch and previous pending batches remediates this. If for some reason, the latest batch transaction is not the one that finally gets mined,\n              // we can just slice off the leading part of `pendingBatches` up to the batch whose transaction got mined and send a new batch transaction with all the transactions in the batches that remain.\n              batch = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(pendingBatches)).reduce(function (acc, t) {\n                acc.datas.push(t.method.apply(t, _toConsumableArray(t.args)).encodeABI());\n                acc.targets.push(t.to);\n                acc.totalGas += t.gas;\n                acc.totalValue += t.value;\n                acc.values.push(t.value);\n                return acc;\n              }, {\n                datas: [],\n                targets: [],\n                totalGas: 0,\n                totalValue: 0,\n                values: []\n              }); // Send it if it has at least one item.\n\n              if (!(batch.targets.length > 0)) {\n                _context.next = 24;\n                break;\n              }\n\n              batchSend = transactionBatcher.methods.batchSend(batch.targets, batch.values, batch.datas);\n              _context.t0 = web3.eth;\n              _context.t1 = web3.eth.accounts;\n              _context.t2 = batchSend.encodeABI();\n              _context.next = 11;\n              return batchSend.estimateGas({\n                value: batch.totalValue\n              });\n\n            case 11:\n              _context.t3 = _context.sent;\n              _context.t4 = batch.totalGas;\n              _context.t5 = _context.t3 + _context.t4;\n              _context.t6 = transactionBatcher.options.address;\n              _context.t7 = batch.totalValue;\n              _context.t8 = {\n                data: _context.t2,\n                gas: _context.t5,\n                to: _context.t6,\n                value: _context.t7\n              };\n              _context.t9 = privateKey;\n              _context.next = 20;\n              return _context.t1.signTransaction.call(_context.t1, _context.t8, _context.t9);\n\n            case 20:\n              _context.t10 = _context.sent.rawTransaction;\n\n              _context.t11 = function (receipt) {\n                console.info('Batch receipt: ', receipt); // Remove all batches whose transactions were mined by using the `batchIndex` we have a closure over.\n\n                pendingBatches = pendingBatches.slice(batchIndex + 1);\n                if (pendingBatches.length > 0) batchedSend([]); // If some batches remain, send a new batch transaction with all of their transactions.\n              };\n\n              _context.t12 = function (err) {\n                console.error('Batch error: ', err); // We ignore errors, because lost transactions will just get sent in a future batch.\n              };\n\n              _context.t0.sendSignedTransaction.call(_context.t0, _context.t10).on('receipt', _context.t11).on('error', _context.t12);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), wait);\n  return batchedSend;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.functionsUtil.BNify(this.props.votes).gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.functionsUtil.BNify(this.props.balance).gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Box, Flex, Blockie, Text, Link, Icon } from \"rimble-ui\";\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const creationTime = proposal.states[0].start_time*1000;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const endTime = (proposal.states[0].start_time+parseInt(this.functionsUtil.blocksToSeconds(this.props.votingPeriod)))*1000;\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued' && parseInt(new Date().getTime()/1000)-parseInt(proposal.states[proposal.states.length-1].start_time)>=parseInt(this.props.timelockDelay);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(creationTime).utc().format('DD MMM, YYYY @ HH:mm')} UTC`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(proposal.proposer)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={proposal.proposer}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={proposal.state==='Active' ? `Ending on ${this.functionsUtil.strToMoment(endTime).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : `Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    blockNumber:null,\n    currentRoute:null,\n    votingPeriod:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.props.setCurrentSection('governance');\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n\n    if (!this.props.web3){\n      return false;\n    }\n\n    const newState = {};\n    const [\n      blockNumber,\n      votingPeriod,\n      timelockDelay,\n      {\n        proposalThreshold, proposalMaxOperations\n      }\n    ] = await Promise.all([\n      this.functionsUtil.getBlockNumber(),\n      this.governanceUtil.getVotingPeriod(),\n      this.governanceUtil.getTimelockDelay(),\n      this.governanceUtil.getProposalParams(),\n    ]);\n\n    newState.blockNumber = blockNumber;\n    newState.votingPeriod = votingPeriod;\n    newState.timelockDelay = timelockDelay;\n    newState.proposalThreshold = proposalThreshold;\n    newState.proposalMaxOperations = proposalMaxOperations;\n\n    if (this.props.account){\n      const [\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      newState.votes = votes;\n      newState.balance = balance;\n      newState.currentDelegate = currentDelegate;\n    }\n\n    this.setState(newState);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            border={0}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            backgroundColor={'menuBg'}\n            borderColor={this.props.theme.colors.menuRightBorder}\n            borderRight={`1px solid ${this.props.theme.colors.menuRightBorder}`}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      blockNumber={this.state.blockNumber}\n                      votingPeriod={this.state.votingPeriod}\n                      loadUserData={this.loadData.bind(this)}\n                      timelockDelay={this.state.timelockDelay}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}