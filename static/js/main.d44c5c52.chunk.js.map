{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","Title/Title.js","TrancheField/TrancheField.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","RoundButton/RoundButton.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","ExtLink/ExtLink.js","CustomField/CustomField.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","fieldComponent","TrancheField","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","children","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","fields","mr","themeMode","textTransform","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","console","log","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","currentWeb3","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","fromBlock","toBlock","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheRewardTokensInfo","_ref31","_callee20","tokensDistribution","_context20","_ref32","_callee19","firstHarvest","latestHarvest","tokenApr","tokenApy","lastAmount","totalAmount","distributionSpeedUnit","tokensPerDay","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","_ref33","_ref34","_firstHarvest","_latestHarvest","firstBlock","_ref35","_ref36","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","_context19","_address","rewardsRate","apr2apy","apr","apy","getBlockInfo","genericContractCallCached","returnValues","total","_x16","_x14","_x15","_ref37","_callee22","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref38","_ref39","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context22","sort","_ref40","_callee21","trancheTokenTransferEvent","tokenTransferEvent","_ref41","_ref42","blockInfo","tokenConversionRate","_context21","_x20","trancheTokenAmount","hashKey","trancheTokens","_x17","_x18","_x19","getTrancheUserTransactions","_ref43","_callee23","_context23","_x21","_x22","_x23","getTrancheFirstDepositTx","_ref44","_callee24","_context24","_x24","_x25","_x26","getAmountDepositedTranche","_ref45","_callee25","_context25","_x27","_x28","_x29","_ref46","_callee26","_ref47","_ref48","userAvgPrice","_context26","_x30","_x31","getAmountLent","_callee27","amountLents","_args27","_context27","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee33","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref51","_ref52","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args33","_context33","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref53","_callee28","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context28","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x32","_ref54","_callee29","_context29","_x33","match","_ref55","_callee30","_context30","_x34","_ref56","_callee31","_context31","_x35","items","to_address","_ref57","_callee32","polygonTx","_context32","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x36","getPolygonBaseTxs","_callee34","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args34","_context34","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee35","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args35","_context35","filterEthereumTxs","_callee36","_args36","_context36","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee37","resultData","_resultData","allAvailableTokens","_args37","_context37","processStoredTxs","t1","_callee38","contractInstance","_context38","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref63","_callee39","_ref64","_ref65","_context39","getTransactionReceipt","_x37","_ref66","_callee40","_args40","_context40","_x38","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref67","_callee41","processTransactions","idleTokensAddresses","_args41","_context41","mappedTx","_x39","_x40","filterEtherscanTxs","_ref68","_callee42","processTxs","_args42","_context42","_x41","_ref69","_callee43","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args43","_context43","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x42","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref70","_callee48","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args48","_context48","baseTokenConfig","baseTokenAddress","_ref71","_callee47","minedTxs","_context47","_ref72","_callee46","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context46","getCurveTokenPrice","_ref73","_callee44","_context44","_x47","_x48","baseTokensConfig","t2","_ref74","_callee45","_context45","_x49","_x50","_x45","_x46","_x44","_x43","_ref75","_callee54","txsToProcess","_args54","_context54","_ref76","_callee53","_context53","_ref77","_callee52","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context52","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref78","_callee49","_context49","_x55","_x56","_ref79","_callee50","_context50","_x57","_x58","oldContract","events","raw","_ref80","_callee51","_context51","_x59","_x60","abi","decodeLog","_token","_x53","_x54","_x52","_x51","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref81","_callee55","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args55","_context55","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x61","_ref82","_callee56","error_callback","config","_args56","_context56","post","catch","_x62","_ref83","_callee57","_args57","_context57","_x63","_ref84","_callee58","apiKeyIndex","apiKey","_args58","_context58","_x64","_ref85","_callee59","return_data","_args59","_context59","_x65","makeCachedPostRequest","_ref86","_callee60","_args60","_context60","_x66","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee61","page","googlePageviewInfo","isOrigin","_args61","_context61","ga","_ref88","_callee63","googleEventsInfo","debugEnabled","originOk","_args63","_context63","analytics","google","addPostfixForTestnet","availableNetworks","_ref89","_callee62","_context62","hitCallback","hitCallbackFail","_x68","_x69","_x67","createContract","_ref90","_callee64","_context64","_x70","_x71","_x72","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee67","activeOnly","whitelist","proposals","validProposals","_args67","_context67","addr","_ref92","_callee66","checkedStrategies","_context66","end","author","snapshot","strategies","_ref93","_callee65","tokenContract","_context65","_x74","_x73","getAprsFromApi","_callee68","endpointInfo","aprs","_args68","_context68","_ref95","_callee69","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args69","_context69","_x75","getTokenExchangeRate","_ref96","_callee70","exchangeRateParams","exchangeRate","_context70","_x76","_x77","getTokenDecimals","_ref97","_callee71","_context71","_x78","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee72","idleTokenConfig","feeDistributorConfig","_context72","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee73","contractPaused","_args73","_context73","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref100","_callee75","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context75","lastAllocationsPromise","_ref101","_callee74","lastAllocations","_context74","_x80","_x81","alloc","_x79","_ref102","_callee76","oldContractBalance","oldContractTokenDecimals","oldContractName","_context76","_x82","_x83","_ref103","_callee77","eventName","_args77","_context77","getContractPastEvents","_x84","_x85","estimateMethodGasUsage","_ref104","_callee78","methodParams","_contract$methods","functionCall","gasLimit","_ref105","_ref106","_args78","_context78","getGasPrice","estimateGas","_x86","_x87","_ref107","_callee79","userAddress","signedParameters","callback_receipt","_contract$methods2","_context79","on","once","confirmationNumber","receipt","_x88","_x89","_x90","_x91","_x92","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref108","_callee80","biconomyInfo","res","_context80","limits","apiId","headers","x-api-key","_x93","sendTxWithPermit","_ref109","_callee81","_contract$methods3","messageToSign","_this$getSignaturePar","_context81","encodeABI","personal","sign","_x94","_x95","_x96","_x97","_x98","_x99","buildBiconomyErc20ForwarderTx","_ref110","_callee82","permitType","callData","buildParams","_context82","txGas","erc20ForwarderClient","buildTx","_x100","_x101","_x102","_x103","_x104","_ref111","_callee84","_context84","_ref112","_callee83","_context83","_x106","_x107","_x105","sendBiconomyTxWithErc20Forwarder","_ref113","_callee85","req","metaInfo","txResponse","fetchReceiptIntervalId","_context85","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x108","_x109","_x110","_x111","sendBiconomyTxWithPersonalSign","_ref114","_callee86","_this$getSignaturePar2","_context86","getNonce","_x112","_x113","_x114","_x115","signPermitEIP2612","_ref115","_callee87","erc20Name","owner","spender","deadline","domain","permit","domainData","_context87","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x116","_x117","_x118","_x119","_x120","_x121","_x122","_x123","signPermit","_ref116","_callee88","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args88","_context88","net","getId","round","nonceMethod","pow","allowed","response","_x124","_x125","_x126","_ref117","_callee89","permitParams","methodAbi","useNonce","_args89","_context89","_jsonInterface","f","unshift","_x127","_x128","_x129","_x130","_x131","_x132","_x133","sendSignedTx","_ref118","_callee90","MetaTransaction","dataToSign","_context90","_x134","_x135","_x136","_x137","_x138","checkTokenApproved","_ref119","_callee91","contractAddr","walletAddr","_ref120","_ref121","allowance","_context91","getAllowance","gte","_x139","_x140","_x141","_ref122","_callee92","_context92","_x142","_x143","_x144","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee94","highestValue","_args94","_context94","lendRates","aprInfo","tokenAPR","_ref124","_callee93","_context93","_x145","_ref125","_callee95","_args95","_context95","_x146","_x147","_ref126","_callee97","_args97","_context97","_ref127","_callee96","tokenGlobalConfig","stakingRewardsContract","_context96","_x150","_x148","_x149","_ref128","_callee98","field","addGovTokens","_args98","_context98","loadTrancheField","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_x158","_ref129","_callee99","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref130","_ref131","totalSupply","virtualPrice","_ref132","_ref133","lastPrice1","staked1","_ref134","_ref135","deposited1","lastPrice","_ref136","_ref137","redeemable1","staked2","_ref138","_ref139","earningsStart","trancheApy2","deposited3","earningsEnd","_ref140","_ref141","trancheFee","earningsCounter","feesEnd","feesStart","_ref142","_ref143","deposited4","redeemable3","_ref144","_ref145","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref146","_ref147","_ref148","_ref149","earningsPerc","secondsFromFirstTx","_ref150","_ref151","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args99","_context99","Strategy","initContract","AA","BB","getTokenTotalSupply","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x159","_x160","_x161","_x162","_x163","_x164","_x165","loadAssetField","_ref152","_callee100","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref153","_ref154","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref155","_ref156","amountLentCurve1","redeemableBalanceCurve","_ref157","_ref158","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref159","_ref160","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref161","_ref162","tokenPriceFirstDeposit","_ref163","_ref164","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref165","_ref166","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref167","_ref168","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref169","_ref170","amountLentCurve2","redeemableBalanceCurve1","_ref171","_ref172","redeemableBalance2","_args100","_context100","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x166","_x167","_x168","_x169","getIdleTokenSupply","_ref173","_callee101","idleTokenSupply","_args101","_context101","_x170","getIdleTokenPriceWithFee","_ref174","_callee102","_ref175","_ref176","fee","priceWFee","_args102","_context102","eq","_x171","_x172","_ref177","_callee103","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args103","_context103","_x173","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref178","_callee104","_ref179","_ref180","idleTokensTotalSupply","userShare","_context104","_x174","_x175","open","_callee106","coverProtocolConfig","nexusMutualConfig","_args106","_context106","_ref182","_callee105","coverage","coverageTokens","protocolImage","_context105","tokens","expirationTimestamp","utc","_x176","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref183","_callee108","incidentsInfo","_ref184","_ref185","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context108","directProps","startBlock","contractInfo","buyer","_ref186","_callee107","cover","coverId","claimSubmittedEvent","_ref187","_ref188","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref189","_ref190","_context107","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x178","_x177","getBatchedDepositExecutions","_ref191","_callee109","_context109","_x179","getBatchedDeposits","_callee111","filter_by_status","batchDepositConfig","batchedDeposits","_args111","_context111","_ref193","_callee110","currBatchIndex","batchIndex","_ref194","_ref195","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context110","_x180","getETHBalance","_ref196","_callee112","fixDecimals","_args112","_context112","_x181","_ref197","_callee113","_ref198","_ref199","_args113","_context113","ERC20","_x182","_x183","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref200","_callee114","_args114","_context114","_x184","_ref201","_callee115","_args115","_context115","_x185","_ref202","_callee116","_args116","_context116","_x186","_x187","getProtocolBalance","_ref203","_callee117","_context117","_x188","_x189","getAprs","_ref204","_callee118","_context118","addresses","_x190","genericIdleCall","_ref205","_callee119","callParams","_args119","_context119","_x191","_ref206","_callee120","_contract$methods4","_args120","_context120","_x192","_x193","_ref207","_callee122","_args122","_context122","_ref208","_callee121","_context121","_x195","_x196","_x194","getTxDecodedLogs","_ref209","_callee124","logAddr","decodeLogs","internalTransfers","_context124","_ref210","_callee123","_context123","_x201","_x202","_x197","_x198","_x199","_x200","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee125","_context125","_callee126","blockInfoToSave","_args126","_context126","getBlock","_ref213","_callee127","_args127","_context127","getPastEvents","_x203","_x204","_ref214","_callee128","_args128","_context128","_x205","_x206","cachedContractCall","_ref215","_callee129","_args129","_context129","_x207","_x208","_ref216","_callee130","_contract$methods5","_args130","_context130","_x209","_x210","_ref217","_callee131","async","_args131","_context131","_x211","_x212","getUnlentBalance","_ref218","_callee132","unlentBalance","_context132","_x213","_ref219","_callee133","_args133","_context133","_x214","getLastAllocations","_ref220","_callee135","tokenAllocations","_context135","_ref221","_callee134","_context134","_x216","_x217","_x215","_ref222","_callee136","protocolsAprs","_ref223","_ref224","govTokensBalances","_args136","_context136","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x218","getSushiswapPoolTokenPrice","_ref225","_callee137","_ref226","_ref227","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref228","_ref229","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context137","getSushiswapConversionRate","_x219","_ref230","_callee138","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context138","_x220","_x221","_ref231","_callee139","useWETH","unires","_args139","_context139","addressForPrice","_x222","_x223","getCurveDepositedTokens","_ref232","_callee140","idleTokensBalances","remainingCurveTokens","_args140","_context140","_x224","getCurveUnevenTokenAmounts","_ref233","_callee141","amounts","max_burn_amount","unevenAmounts","_context141","getCurveDepositContract","_x225","_x226","_callee142","curveRatesInfo","_args142","_context142","_callee143","_context143","strategyTokens","getCurveAPYContract","_callee144","blocksForPrevTokenPrice","_ref237","_ref238","prevTokenPrice","blocksMultiplier","curveAPR","_context144","getCurveTokenSupply","_callee145","_context145","getCurvePoolContract","_callee146","_args146","_context146","_callee147","_args147","_context147","_ref242","_callee148","_ref243","_ref244","_context148","_x227","_callee149","depositContractInfo","_context149","getCurveZapContract","_callee150","zapContractInfo","_context150","_callee151","poolContractInfo","_context151","getCurveSwapContract","_callee152","migrationContractInfo","_context152","getCurveIdleTokensAmounts","_callee154","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args154","_context154","_ref250","_callee153","coinIndex","curveIdleTokens","_context153","migrationParams","_x228","getCurveTokensAmounts","_callee156","useCoinIndex","_args156","_context156","_ref252","_callee155","_ref253","_ref254","idleTokenPrice","totalTokenSupply","_context155","_x229","getCurveAmounts","_ref255","_callee158","_args158","_context158","_ref256","_callee157","_context157","_x232","_x230","_x231","getCurveTokenAmount","_ref257","_callee159","_args159","_context159","_x233","getCurveSlippage","_ref258","_callee160","uneven_amounts","depositContract","_ref259","_ref260","Sv","_args160","_context160","_x234","_x235","_ref261","_callee161","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref262","_ref263","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args161","_context161","IAaveIncentivesController","emissionPerSecond","_x236","_callee163","_args163","_context163","_ref265","_callee162","_ref266","_ref267","_context162","_x237","getWMaticApr","_ref268","_callee164","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args164","_context164","_x238","_x239","getStkAaveApr","_ref269","_callee165","aaveConversionRate","stkAaveAPR","stkAaveValue","_args165","_context165","_x240","_x241","getCompAPR","_ref270","_callee166","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args166","_context166","_x242","_x243","getCompSpeed","_ref271","_callee167","cTokenAddress","compSpeed","_context167","_x244","_ref272","_callee168","cTokenInfo","compoundAllocationPerc","_ref273","_ref274","cTokenTotalSupply","compoundPoolShare","_args168","_context168","_x245","_callee170","_args170","_context170","_ref276","_callee169","_ref277","_ref278","_context169","_x246","_callee172","_args172","_context172","_ref280","_callee171","_ref281","_ref282","compApr","_context171","_x247","getTokensCsv","_callee175","csv","_context175","prototype","sum","pv","cv","avg","_ref284","_callee174","_context174","_ref285","_callee173","rates","header","aprAvg","scoreAvg","lastRow","_context173","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x249","_x248","_callee177","convertToken","_args177","_context177","_ref287","_callee176","compTokenBalance","_context176","_x250","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref288","_callee179","govTokensUserDistribution","_args179","_context179","_ref289","_callee178","_context178","_x252","_x251","getGovTokensDistributionSpeed","_ref290","_callee181","govTokensDistribution","_args181","_context181","_ref291","_callee180","govSpeed","_context180","_x254","_x253","getGovTokensAprs","_ref292","_callee183","govTokensAprs","_args183","_context183","_ref293","_callee182","_ref294","_ref295","_ref296","_ref297","cTokenConfig","_context182","aprTooltipMode","_x257","_x255","_x256","_callee185","_args185","_context185","_ref299","_callee184","govTokenBalance","fromTokenConfig","_context184","_x258","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee186","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args186","_context186","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref301","_callee188","govTokensAmounts","_context188","getGovTokensUserAmounts","_ref302","_callee187","govTokenIndex","govTokenAddress","_context187","getGovTokenAddessByIndex","_x261","_x262","_x259","_x260","_ref303","_callee189","_context189","_x263","_x264","_ref304","_callee190","_context190","_x265","_x266","_callee193","govTokenConfigForced","_args193","_context193","_ref306","_callee192","_context192","_ref307","_callee191","_context191","_x268","_x269","_x267","getTokenFees","_callee194","_args194","_context194","_callee195","_ref310","_ref311","feePercentage","gain","fees","_args195","_context195","_ref312","_callee196","_args196","_context196","_x270","getTotalTVL","_callee197","tokensTVL","_context197","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee201","_context201","_ref315","_callee200","_context200","_ref316","_callee199","oldTokenTVL","idleTokenName","_ref317","_ref318","oldTokenConfig","_ref322","_ref323","oldTokenPrice","oldTotalSupply","_context199","showAUM","_ref319","_callee198","_ref320","_ref321","govTokenConversionRate","govTokenBalanceConverted","_context198","_x273","oldProtocols","oldProtocol","protocolPos","_x272","_x271","getSubstackLatestFeed","_callee202","idleSubstackFeed","latestFeed","_context202","getTrancheAggregatedStats","_callee206","totalAUM","_args206","_context206","_ref326","_callee205","_context205","_ref327","_callee204","_context204","_ref328","_callee203","_ref329","_ref330","_context203","_x276","_x275","_x274","getAggregatedStats","_callee208","allNetworks","networkIds","_args208","_context208","_ref332","_callee207","tvls","_context207","getAggregatedStats_chain","_x277","_callee212","avgAPR","_args212","_context212","_ref334","_callee211","_context211","_ref335","_callee210","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context210","_ref336","_callee209","_ref337","_ref338","_context209","_x280","_x279","_x278","getTokenApy","_ref339","_callee213","_context213","_x281","getTokensToMigrate","_callee216","_args216","_context216","_ref341","_callee215","_context215","_ref342","_callee214","_ref343","_context214","_x283","_x282","getProtocolsTokensBalances","_callee218","tokenBalances","minTokenBalance","protocolsTokens","_args218","_context218","_ref345","_callee217","_context217","_x284","getTokenConversionRateField","_ref346","_callee219","_args219","_context219","_x285","_x286","_ref347","_callee220","_args220","_context220","_x287","_x288","_x289","getAvgAPYStats","_ref348","_callee221","apiResults","_args221","_context221","_x290","_x291","_ref349","_callee222","statsTokenConfig","ToTokenConfig","_args222","_context222","addressForPriceFrom","_x292","_ref350","_callee223","count","_conversionRate","_args223","_context223","_x293","_x294","getTokenScore","_ref351","_callee224","_ref352","_ref353","tokenScore","_context224","protocolScore","getTokenScoreApi","_x295","_x296","_ref354","_callee225","scores","_context225","_x297","_x298","_ref355","_callee226","idleGovTokenShowAPR","idleAPR","_args226","_context226","_x299","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","unstakeWithBalance","Button","transactionSucceeded","unstake","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","buyInstructions","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","ALUSD3CRV","MUSD3CRV","MUSD","ANGLE","3EUR","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args7","initContractWithoutSet","_args8","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","balanceOf","determineAccountLowBalance","openConnectionModal","_args20","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args22","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args23","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","steCRV","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.d44c5c52.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerDay = this.BNify(0);\n      let tokensPerYear = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      if (rewardsRateMethod){\n        [\n          tokensPerSecond,\n          totalAmount,\n          tranchePoolSize\n        ] = await Promise.all([\n          this.genericContractCall(trancheConfig.CDORewards.name,rewardsRateMethod),\n          this.genericContractCall(token,'balanceOf',[trancheConfig.CDORewards.address]),\n          this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n        ]);\n\n        tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n        tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n\n        tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n        tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n        tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n        convertedTokensPerYear = tokensPerYear.times(conversionRate);\n        tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n        tokenApy = this.apr2apy(tokenApr).times(100);\n\n        distributionSpeed = tokensPerDay;\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n        // console.log('getTrancheRewardTokensInfo',tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokensDistribution);\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n        const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n          const [\n            prevBlockInfo,\n            lastBlockInfo,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, null);\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price, null);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return results.data;\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.2\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1959,\n\t\"./testnet/mumbai/index.json\": 1960\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4546;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4548,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4549,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4550,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4551,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4552,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4553,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4554,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4555,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4556,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4557,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4558,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4559,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4560,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4561,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4562,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4563,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4564,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4565,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4566,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4567,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4591,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4592,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4593,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4594,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4595,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4596,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4597,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4598,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4599,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4600,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4601,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4602,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4603,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4604,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4605,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4607,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4608,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4609,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4610,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4611,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4613,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4614,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4615,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4616,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4619,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4620,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4621,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4622,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4623,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4624,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4625,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4626,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4627,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4628,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4629,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4630,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4631,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4633,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4634,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4635,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4636,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4637,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4638,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4639,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4640,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4642,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4643,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4644,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4645,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4646,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4647,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4648,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4649,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4650,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4652,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4653,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4654,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4655,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4656,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4657,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4658,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4659,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4660,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4661,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4662,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4663,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4664,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4665,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4666,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4667,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4668,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4669,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4670,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4671,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4672,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4673,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4674,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4675,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4676,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4677,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4678,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4679,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4680,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4681,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4682,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4683,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4684,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4685,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4686,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4687,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4688,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4689,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4690,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4691,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4692,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4693,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4694,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4695,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4696,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4697,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4698,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4699,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4700,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4701,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4702,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4703,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4704,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4705,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4706,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4707,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4708,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4709,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4710,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4711,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4712,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4713,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4714,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4715,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4716,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4717,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4718,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4719,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4720,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4721,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4722,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4723,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4724,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4725,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4726,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4727,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4728,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4729,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4730,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4731,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4732,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4733,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4734,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4735,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4736,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4737,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4738,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4739,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4740,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4741,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4742,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4743,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4744,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4745,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4746,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4747,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4748,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4749,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4750,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4751,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4752,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4753,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4754,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4755,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4756,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4757,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4758,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4759,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4760,\n\t\"./mainnet/v1/index.json\": 1959,\n\t\"./networks.json\": 1958,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4761,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4762,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4763,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4764,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4765,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4766,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4767,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4768,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4769,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4770,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4771,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4772,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4773,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4774,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4775,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4776,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4777,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4778,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4779,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4780,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4804,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4805,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4806,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4807,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4808,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4809,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4810,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4811,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4812,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4813,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4814,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4815,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4816,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4817,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4818,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4820,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4821,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4822,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4823,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4824,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4826,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4827,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4828,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4829,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4832,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4833,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4834,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4835,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4836,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4837,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4838,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4839,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4840,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4841,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4842,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4843,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4844,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4846,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4847,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4848,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4849,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4850,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4851,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4852,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4853,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4855,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4856,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4858,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4859,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4860,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4861,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4862,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4863,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4865,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4866,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4867,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4868,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4869,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4870,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4871,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4872,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4873,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4874,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4875,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4876,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4877,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4878,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4879,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4880,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4881,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4882,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4883,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4884,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4885,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4886,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4887,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4888,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4889,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4890,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4891,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4892,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4893,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4894,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4895,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4896,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4897,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4898,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4899,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4900,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4901,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4902,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4903,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4904,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4905,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4906,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4907,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4908,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4909,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4910,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4911,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4912,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4913,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4914,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4915,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4916,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4917,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4918,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4919,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4920,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4921,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4922,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4923,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4924,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4925,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4926,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4927,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4928,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4929,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4930,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4931,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4932,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4933,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4934,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4935,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4936,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4937,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4938,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4939,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4940,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4941,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4942,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4943,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4944,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4945,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4946,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4947,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4948,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4949,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4950,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4951,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4952,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4953,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4954,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4955,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4956,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4957,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4958,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4959,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4960,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4961,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4962,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4963,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4964,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4965,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4966,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4967,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4968,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4969,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4970,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4971,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4972,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4973,\n\t\"./testnet/mumbai/index.json\": 1960\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4547;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',connectorName,this.state.network,context,useWeb3Provider,web3Provider,web3Host,originalWeb3,web3,this.state.web3,web3!==this.state.web3);\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    /*\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    }\n    */\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['cachedData','walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}